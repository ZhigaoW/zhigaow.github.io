{"config":{"indexing":"full","lang":["en","ja"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Wang's Blog \u00b6 Support by github pages , mkdocs.org and material for mkdocs","title":"Wang's Blog"},{"location":"#wangs-blog","text":"Support by github pages , mkdocs.org and material for mkdocs","title":"Wang's Blog"},{"location":"about/","text":"","title":"Index"},{"location":"about/cv-full/","text":"\u738b\u5fd7\u9ad8 \u00b6 \u5b66\u5386 \u00b6 \u4e2d\u56fd\u77ff\u4e1a\u5927\u5b66(2016-2020) \u6d59\u6c5f\u5927\u5b66(2022-2023)","title":"\u4e2a\u4eba\u5c65\u5386"},{"location":"about/cv-full/#_1","text":"","title":"\u738b\u5fd7\u9ad8"},{"location":"about/cv-full/#_2","text":"\u4e2d\u56fd\u77ff\u4e1a\u5927\u5b66(2016-2020) \u6d59\u6c5f\u5927\u5b66(2022-2023)","title":"\u5b66\u5386"},{"location":"about/support/","text":"","title":"\u652f\u6301\u4f5c\u8005"},{"location":"computer_science/database/IMPLEMENTATION/","text":"BUFFER POOL \u00b6 1. LRU REPLACEMENT POLICY \u00b6 class LRUReplacer : public Replacer Public \u7ee7\u627f Replacer Function \u00b6 Victim : \u4ece\u8ddf\u8e2a\u4e2d\u7684\u5757\u4e2d\u6311\u51fa\u4e00\u4e2a\u79fb\u9664 Unpin: Replacer\u5f00\u59cb\u8ddf\u8e2aframe_id\u7684\u5757 Pin: \u4eceReplacer\u7684\u8ddf\u8e2a\u4e2d\u79fb\u9664 \u8bbe\u8ba1 \u00b6 \u91c7\u7528 map + list \u7684\u8bbe\u8ba1 2. BUFFER POOL MANAGER INSTANCE \u00b6 3. PARALLEL BUFFER POOL MANAGER \u00b6","title":"IMPLEMENTATION"},{"location":"computer_science/database/IMPLEMENTATION/#buffer-pool","text":"","title":"BUFFER POOL"},{"location":"computer_science/database/IMPLEMENTATION/#1-lru-replacement-policy","text":"class LRUReplacer : public Replacer Public \u7ee7\u627f Replacer","title":"1. LRU REPLACEMENT POLICY"},{"location":"computer_science/database/IMPLEMENTATION/#function","text":"Victim : \u4ece\u8ddf\u8e2a\u4e2d\u7684\u5757\u4e2d\u6311\u51fa\u4e00\u4e2a\u79fb\u9664 Unpin: Replacer\u5f00\u59cb\u8ddf\u8e2aframe_id\u7684\u5757 Pin: \u4eceReplacer\u7684\u8ddf\u8e2a\u4e2d\u79fb\u9664","title":"Function"},{"location":"computer_science/database/IMPLEMENTATION/#_1","text":"\u91c7\u7528 map + list \u7684\u8bbe\u8ba1","title":"\u8bbe\u8ba1"},{"location":"computer_science/database/IMPLEMENTATION/#2-buffer-pool-manager-instance","text":"","title":"2. BUFFER POOL MANAGER INSTANCE"},{"location":"computer_science/database/IMPLEMENTATION/#3-parallel-buffer-pool-manager","text":"","title":"3. PARALLEL BUFFER POOL MANAGER"},{"location":"computer_science/database/mechanism/","text":"\u6570\u636e\u5e93\u7cfb\u7edf\u6982\u8bba \u00b6 \u6570\u636e\u5e93\u7684\u5b58\u50a8 \u00b6 \u78c1\u76d8\u4f5c\u4e3a\u57fa\u7840\u5b58\u50a8\u7684 \u6570\u636e\u5e93\u7cfb\u7edf\u7684\u5b58\u50a8\u6d89\u53ca\u4e24\u4e2a\u95ee\u9898 \u6570\u636e\u5982\u4f55\u5728\u78c1\u76d8\u4e0a\u8868\u793a(How the DBMS represents the database in files on disk.) \u5982\u4f55\u4ece\u78c1\u76d8\u548c\u5185\u5b58\u4e4b\u95f4\u53cd\u590d\u79fb\u52a8\u6570\u636e (How the DBMS manages its memory and moves data back-and-forth from disk.) \u95ee\u9898\u4e00 \u00b6 File Storage \u00b6 \u4f7f\u7528 buffer pool \u7684\u539f\u56e0\u662f\u4f7f\u5185\u5b58\u770b\u8d77\u6765\u80fd\u88c5\u4e0b\u6240\u6709\u7684\u6587\u4ef6\u3002 \u5982\u679c\u64cd\u4f5c\u7cfb\u7edf\u7684\u865a\u62df\u5185\u5b58\u673a\u5236 \u6709\u53ef\u80fd\u534a\u9875\uff08database page\uff09\u88ab\u6362\u51fa\uff0c\u9700\u8981\u52a0\u9501\uff0c\u5f71\u54cd\u6027\u80fd\u3002 Page Layout \u00b6 \u6700\u5c11\u6709\u4e24\u79cd\u65b9\u5f0f\u5b58\u50a8 Page Tuple-oriented Log-structured Tuple-oriented \u00b6 Log-structured \u00b6 \u4f18\u70b9 \u901f\u5ea6\u5757 \u5982\u679c\u662fTuple-oriented\u7c7b\u578b\u7684\u6570\u636e\u5e93\uff0c\u6211\u4eec\u6709\u5341\u6761\u6570\u636e\u8981\u66f4\u65b0\uff0c\u4f46\u662f\u5341\u6761\u6570\u636e\u5728\u5341\u4e2a\u4e0d\u540c\u7684page\u4e0a\uff0c\u90a3\u4e48\u6211\u4eec\u9700\u8981\u5c06\u6bcf\u4e00\u4e2apage\u8bfb\u53d6\u5230\u5185\u5b58\u91cc\uff0c\u7136\u540e\u518d\u5199\u56de\u53bb\u3002\u4f46\u662f\u5982\u679c\u662fLog-structured\u7c7b\u578b\u7684\u6570\u636e\u5e93\uff0c\u6211\u4eec\u53ea\u9700\u8981\u5c06\u6570\u636e\u6dfb\u52a0\u5230\u4e00\u4e2a\u65b0\u7684page\u4e0a\u3002 \u5206\u5e03\u5f0f\u7cfb\u7edf\u5e38\u7528 \u5206\u5e03\u5f0f\u7cfb\u7edf\u6ca1\u6cd5\u8bbf\u95ee\u6bcf\u4e2a\u6570\u636e\u5b58\u50a8\u7684\u4f4d\u7f6e\uff0c\u6240\u4ee5\u91c7\u7528log\u7684\u5f62\u5f0f\u8ffd\u52a0\u3002[??? \u4e3a\u5565\u4e0d\u80fd\u8bbf\u95ee\u6bcf\u4e2a\u6570\u636e\u7684\u4f4d\u7f6e] \u7f3a\u70b9 - \u8bfb\u53d6\u6162 Tuple Layout \u00b6 \u6570\u636e\u5e93\u4e2d\u5b58\u50a8\u5927\u6587\u4ef6\u7684\u65b9\u6cd5 Data Representation \u00b6 \u6570\u636e\u5e93\u7684Workload \u00b6 On-Line Transaction Processing (OLTP) - Fast operations that only read/update a small amount of data each time. On-Line Analytical Processing (OLAP) Complex queries that read a lot of data to compute aggregates. Hybrid Transaction + Analytical Processing - OLTP + OLAP together on the same database instance \u884c\u5b58\u50a8\u7684tuple\u505aOLTP\u5f88\u5feb\uff0c\u4f46\u662f\u505aOLAP\u4f1a\u8bfb\u53d6\u6ca1\u7528\u7684\u6570\u636e\u8fdb\u5165\u5185\u5b58\uff0c\u6d6a\u8d39\u8d44\u6e90 \u95ee\u9898\u4e8c \u00b6 Buffer Pool Manager \u00b6 \u5927\u591a\u6570\u6570\u636e\u5e93\u4f7f\u4e0d\u4f7f\u7528direct I/O( O_DIRECT )\uff0c\u4f18\u70b9\u548c\u7f3a\u70b9\u5206\u522b\u662f\u4ec0\u4e48??? Replacement Policies \u00b6 Other Memory Pools \u00b6 \u6570\u636e\u5e93\u7684\u7d22\u5f15 \u00b6 \u6570\u636e\u5e93\u4e00\u5171\u67095\u5c42 Data Organization Concurrency HASH TABLES \u00b6 \u54c8\u5e0c\u51fd\u6570\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u5e73\u5747\u662fO(1)\uff0c\u6700\u574f\u7684\u60c5\u51b5\u4e0b\u662fO(n)\u3002 \u4f46\u662fO(1)\u4e5f\u6709\u5f88\u5927\u7684\u4e0d\u540c\u7684\u3002\u4e00\u4e2aHASH\u51fd\u6570\u8981\u70b9 Hash Function Hash Scheme(collisions) \u73b0\u5728\u5e38\u7528\u7684Hash\u51fd\u6570 \u73b0\u5728\u6700\u5feb\u7684\u662f xxHash3 \u56e0\u4e3akey-value\u4e0d\u662f\u4e00\u5bf9\u4e00\u7684\uff0c\u90a3\u4e48\u6211\u4eec\u5982\u4f55\u5904\u7406non-unique-keys\u7684\u60c5\u51b5\u5462 \u4f7f\u7528\u4e00\u4e2a\u5355\u72ec\u7684Value\u7684\u94fe\u8868 \u8bb0\u5f55\u591a\u4e2akey","title":"\u539f\u7406"},{"location":"computer_science/database/mechanism/#_1","text":"","title":"\u6570\u636e\u5e93\u7cfb\u7edf\u6982\u8bba"},{"location":"computer_science/database/mechanism/#_2","text":"\u78c1\u76d8\u4f5c\u4e3a\u57fa\u7840\u5b58\u50a8\u7684 \u6570\u636e\u5e93\u7cfb\u7edf\u7684\u5b58\u50a8\u6d89\u53ca\u4e24\u4e2a\u95ee\u9898 \u6570\u636e\u5982\u4f55\u5728\u78c1\u76d8\u4e0a\u8868\u793a(How the DBMS represents the database in files on disk.) \u5982\u4f55\u4ece\u78c1\u76d8\u548c\u5185\u5b58\u4e4b\u95f4\u53cd\u590d\u79fb\u52a8\u6570\u636e (How the DBMS manages its memory and moves data back-and-forth from disk.)","title":"\u6570\u636e\u5e93\u7684\u5b58\u50a8"},{"location":"computer_science/database/mechanism/#_3","text":"","title":"\u95ee\u9898\u4e00"},{"location":"computer_science/database/mechanism/#file-storage","text":"\u4f7f\u7528 buffer pool \u7684\u539f\u56e0\u662f\u4f7f\u5185\u5b58\u770b\u8d77\u6765\u80fd\u88c5\u4e0b\u6240\u6709\u7684\u6587\u4ef6\u3002 \u5982\u679c\u64cd\u4f5c\u7cfb\u7edf\u7684\u865a\u62df\u5185\u5b58\u673a\u5236 \u6709\u53ef\u80fd\u534a\u9875\uff08database page\uff09\u88ab\u6362\u51fa\uff0c\u9700\u8981\u52a0\u9501\uff0c\u5f71\u54cd\u6027\u80fd\u3002","title":"File Storage"},{"location":"computer_science/database/mechanism/#page-layout","text":"\u6700\u5c11\u6709\u4e24\u79cd\u65b9\u5f0f\u5b58\u50a8 Page Tuple-oriented Log-structured","title":"Page Layout"},{"location":"computer_science/database/mechanism/#tuple-oriented","text":"","title":"Tuple-oriented"},{"location":"computer_science/database/mechanism/#log-structured","text":"\u4f18\u70b9 \u901f\u5ea6\u5757 \u5982\u679c\u662fTuple-oriented\u7c7b\u578b\u7684\u6570\u636e\u5e93\uff0c\u6211\u4eec\u6709\u5341\u6761\u6570\u636e\u8981\u66f4\u65b0\uff0c\u4f46\u662f\u5341\u6761\u6570\u636e\u5728\u5341\u4e2a\u4e0d\u540c\u7684page\u4e0a\uff0c\u90a3\u4e48\u6211\u4eec\u9700\u8981\u5c06\u6bcf\u4e00\u4e2apage\u8bfb\u53d6\u5230\u5185\u5b58\u91cc\uff0c\u7136\u540e\u518d\u5199\u56de\u53bb\u3002\u4f46\u662f\u5982\u679c\u662fLog-structured\u7c7b\u578b\u7684\u6570\u636e\u5e93\uff0c\u6211\u4eec\u53ea\u9700\u8981\u5c06\u6570\u636e\u6dfb\u52a0\u5230\u4e00\u4e2a\u65b0\u7684page\u4e0a\u3002 \u5206\u5e03\u5f0f\u7cfb\u7edf\u5e38\u7528 \u5206\u5e03\u5f0f\u7cfb\u7edf\u6ca1\u6cd5\u8bbf\u95ee\u6bcf\u4e2a\u6570\u636e\u5b58\u50a8\u7684\u4f4d\u7f6e\uff0c\u6240\u4ee5\u91c7\u7528log\u7684\u5f62\u5f0f\u8ffd\u52a0\u3002[??? \u4e3a\u5565\u4e0d\u80fd\u8bbf\u95ee\u6bcf\u4e2a\u6570\u636e\u7684\u4f4d\u7f6e] \u7f3a\u70b9 - \u8bfb\u53d6\u6162","title":"Log-structured"},{"location":"computer_science/database/mechanism/#tuple-layout","text":"\u6570\u636e\u5e93\u4e2d\u5b58\u50a8\u5927\u6587\u4ef6\u7684\u65b9\u6cd5","title":"Tuple Layout"},{"location":"computer_science/database/mechanism/#data-representation","text":"","title":"Data Representation"},{"location":"computer_science/database/mechanism/#workload","text":"On-Line Transaction Processing (OLTP) - Fast operations that only read/update a small amount of data each time. On-Line Analytical Processing (OLAP) Complex queries that read a lot of data to compute aggregates. Hybrid Transaction + Analytical Processing - OLTP + OLAP together on the same database instance \u884c\u5b58\u50a8\u7684tuple\u505aOLTP\u5f88\u5feb\uff0c\u4f46\u662f\u505aOLAP\u4f1a\u8bfb\u53d6\u6ca1\u7528\u7684\u6570\u636e\u8fdb\u5165\u5185\u5b58\uff0c\u6d6a\u8d39\u8d44\u6e90","title":"\u6570\u636e\u5e93\u7684Workload"},{"location":"computer_science/database/mechanism/#_4","text":"","title":"\u95ee\u9898\u4e8c"},{"location":"computer_science/database/mechanism/#buffer-pool-manager","text":"\u5927\u591a\u6570\u6570\u636e\u5e93\u4f7f\u4e0d\u4f7f\u7528direct I/O( O_DIRECT )\uff0c\u4f18\u70b9\u548c\u7f3a\u70b9\u5206\u522b\u662f\u4ec0\u4e48???","title":"Buffer Pool Manager"},{"location":"computer_science/database/mechanism/#replacement-policies","text":"","title":"Replacement Policies"},{"location":"computer_science/database/mechanism/#other-memory-pools","text":"","title":"Other Memory Pools"},{"location":"computer_science/database/mechanism/#_5","text":"\u6570\u636e\u5e93\u4e00\u5171\u67095\u5c42 Data Organization Concurrency","title":"\u6570\u636e\u5e93\u7684\u7d22\u5f15"},{"location":"computer_science/database/mechanism/#hash-tables","text":"\u54c8\u5e0c\u51fd\u6570\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u5e73\u5747\u662fO(1)\uff0c\u6700\u574f\u7684\u60c5\u51b5\u4e0b\u662fO(n)\u3002 \u4f46\u662fO(1)\u4e5f\u6709\u5f88\u5927\u7684\u4e0d\u540c\u7684\u3002\u4e00\u4e2aHASH\u51fd\u6570\u8981\u70b9 Hash Function Hash Scheme(collisions) \u73b0\u5728\u5e38\u7528\u7684Hash\u51fd\u6570 \u73b0\u5728\u6700\u5feb\u7684\u662f xxHash3 \u56e0\u4e3akey-value\u4e0d\u662f\u4e00\u5bf9\u4e00\u7684\uff0c\u90a3\u4e48\u6211\u4eec\u5982\u4f55\u5904\u7406non-unique-keys\u7684\u60c5\u51b5\u5462 \u4f7f\u7528\u4e00\u4e2a\u5355\u72ec\u7684Value\u7684\u94fe\u8868 \u8bb0\u5f55\u591a\u4e2akey","title":"HASH TABLES"},{"location":"computer_science/database/mysql/","text":"MySQL \u00b6","title":"MySQL"},{"location":"computer_science/database/mysql/#mysql","text":"","title":"MySQL"},{"location":"computer_science/linux/gplusplus_link_compile/gplusplus/","text":"C++\u7684\u5e93\u662fC++\u7a0b\u5e8f\u7684\u96c6\u5408\uff0c \u53c2\u8003\u8d44\u6599\u7684\u7b2c\u4e00\u4e2a\u5f88\u6709\u7528\uff0c\u53ef\u4ee5\u89e3\u51b3\u6211\u9047\u5230\u7684\u6240\u6709\u95ee\u9898\uff0c\u6240\u4ee5\u4e0d\u518d\u91cd\u590d \u53c2\u8003 \u00b6 C++\u9759\u6001\u5e93\u4e0e\u52a8\u6001\u5e93 \u300a\u7a0b\u5e8f\u5458\u7684\u81ea\u6211\u4fee\u517b--\u94fe\u63a5\u3001\u88c5\u8f7d\u4e0e\u5e93\u300b","title":"g++\u7f16\u8bd1\u4e0e\u94fe\u63a5"},{"location":"computer_science/linux/gplusplus_link_compile/gplusplus/#_1","text":"C++\u9759\u6001\u5e93\u4e0e\u52a8\u6001\u5e93 \u300a\u7a0b\u5e8f\u5458\u7684\u81ea\u6211\u4fee\u517b--\u94fe\u63a5\u3001\u88c5\u8f7d\u4e0e\u5e93\u300b","title":"\u53c2\u8003"},{"location":"computer_science/linux/linux_cmd/linux_basical/","text":"\u8bf4\u660e \u00b6 \u672c\u6587\u6863\u4e3b\u8981\u7528\u5c11\u91cf\u8bed\u8a00\u548c\u8f83\u591a\u7684\u56fe\u6765\u8bf4\u660elinux\u7684\u4f7f\u7528\u65b9\u6cd5\uff0c\u5e76\u4e14\u4f5c\u8005\u575a\u4fe1\u5b66\u4e60linux\u662f\u8fb9\u7528\u8fb9\u5b66\uff0c\u6240\u4ee5\u5728\u4f7f\u7528\u8fc7\u7a0b\u4e2d\u8981\u67e5\u9605 linux command Bacisal \u00b6 linux\u5185\u6838 \u00b6 Linux kernel command parameter uname -r Linux \u6743\u9650 \u00b6 Users \u00b6 /etc \u6587\u4ef6\u5939\u4e0b\u7684\u4e09\u4e2a\u6587\u4ef6 \u4fee\u6539\u7528\u6237\u6743\u9650\u7684\u547d\u4ee4 \u4fee\u6539\u7528\u6237\u7ec4\u6743\u9650\u7684\u547d\u4ee4 useradd groupadd passwd groupmod chage groupdel usermod gpasswd userdel id chfn chsh File \u00b6 \u4e00\u4e2a\u6587\u4ef6\u7684\u6743\u9650 \u6587\u4ef6\u5927\u5c0f\u4e3aBytes \u6587\u4ef6\u7c7b\u578b d \u76ee\u5f55 - \u6587\u4ef6 l \u8fde\u63a5\u6587\u4ef6 b \u8bbe\u5907\u6587\u4ef6\u91cc\u53ef\u4f9b\u5b58\u50a8\u7684\u5468\u8fb9\u8bbe\u5907 c \u8bbe\u5907\u6587\u4ef6\u91cc\u7684\u4e32\u884c\u7aef\u53e3\u8bbe\u5907 \u6743\u9650\u7c7b\u578b r read w write x execute \u4fee\u6539\u6587\u4ef6\u6743\u9650\u548c\u5c5e\u6027 \u00b6 chgrp\uff1a\u4fee\u6539\u6587\u4ef6\u6240\u5c5e\u7528\u6237\u7ec4 chgrp [ -R ] [ \u7528\u6237\u7ec4 ] dirname/filename chown chown [ -R ] \u8d26\u53f7\u540d\u79f0:\u7528\u6237\u7ec4\u540d\u79f0 dirname/filename chmod chmod - u,g,o,a user, group, other, all +, -, = \u52a0\u5165\uff0c\u79fb\u9664\uff0c\u8bbe\u7f6e r, w, x rwx = 4 + 2 + 1 = 7 chmod 777 .bashrc chmod u = rwx, go = rx .bashrc chmod a+w .bashrc chmod a-x .bashrc \u6587\u4ef6\u6743\u9650\u548c\u76ee\u5f55\u6743\u9650 \u00b6 - file directory r \u8bfb\u53d6\u6587\u4ef6\u5185\u5bb9 \u8bfb\u53d6\u6587\u4ef6\u540d w \u4fee\u6539\u6587\u4ef6\u5185\u5bb9 \u4fee\u6539\u6587\u4ef6\u540d x \u6267\u884c\u6587\u4ef6 \u8fdb\u5165\u76ee\u5f55 \u5982\u679c\u4f60\u62e5\u6709\u4e00\u4e2a\u76ee\u5f55\u7684\u6743\u9650\uff0c\u4f46\u662f\u6ca1\u6709\u5176\u4e2d\u6587\u4ef6\u7684\u6743\u9650\uff0c\u53ef\u4ee5\u5220\u9664\u6587\u4ef6 \u8bfb\u53d6\u4e00\u4e2a\u76ee\u5f55\u91cc\u7684\u6587\u4ef6\uff0c\u4e00\u822c\u81f3\u5c11\u9700\u8981\u76ee\u5f55\u7684rx\u6743\u9650 linux\u7684\u6587\u4ef6\u653e\u7f6e\u6807\u51c6FHS \u6216\u8bb8\u53ef\u4ee5\u6311\u6218\u4e00\u4e0b Filesystem Hierarchy Standard 3.0 \u7684\u9605\u8bfb /usr\u662fUNIX Software Resource \u4e00\u5f20Filesystem Hierarchy Standard\u7684\u56fe\u7247","title":"linux\u547d\u4ee4\u884c"},{"location":"computer_science/linux/linux_cmd/linux_basical/#_1","text":"\u672c\u6587\u6863\u4e3b\u8981\u7528\u5c11\u91cf\u8bed\u8a00\u548c\u8f83\u591a\u7684\u56fe\u6765\u8bf4\u660elinux\u7684\u4f7f\u7528\u65b9\u6cd5\uff0c\u5e76\u4e14\u4f5c\u8005\u575a\u4fe1\u5b66\u4e60linux\u662f\u8fb9\u7528\u8fb9\u5b66\uff0c\u6240\u4ee5\u5728\u4f7f\u7528\u8fc7\u7a0b\u4e2d\u8981\u67e5\u9605 linux command","title":"\u8bf4\u660e"},{"location":"computer_science/linux/linux_cmd/linux_basical/#bacisal","text":"","title":"Bacisal"},{"location":"computer_science/linux/linux_cmd/linux_basical/#linux","text":"Linux kernel command parameter uname -r","title":"linux\u5185\u6838"},{"location":"computer_science/linux/linux_cmd/linux_basical/#linux_1","text":"","title":"Linux \u6743\u9650"},{"location":"computer_science/linux/linux_cmd/linux_basical/#users","text":"/etc \u6587\u4ef6\u5939\u4e0b\u7684\u4e09\u4e2a\u6587\u4ef6 \u4fee\u6539\u7528\u6237\u6743\u9650\u7684\u547d\u4ee4 \u4fee\u6539\u7528\u6237\u7ec4\u6743\u9650\u7684\u547d\u4ee4 useradd groupadd passwd groupmod chage groupdel usermod gpasswd userdel id chfn chsh","title":"Users"},{"location":"computer_science/linux/linux_cmd/linux_basical/#file","text":"\u4e00\u4e2a\u6587\u4ef6\u7684\u6743\u9650 \u6587\u4ef6\u5927\u5c0f\u4e3aBytes \u6587\u4ef6\u7c7b\u578b d \u76ee\u5f55 - \u6587\u4ef6 l \u8fde\u63a5\u6587\u4ef6 b \u8bbe\u5907\u6587\u4ef6\u91cc\u53ef\u4f9b\u5b58\u50a8\u7684\u5468\u8fb9\u8bbe\u5907 c \u8bbe\u5907\u6587\u4ef6\u91cc\u7684\u4e32\u884c\u7aef\u53e3\u8bbe\u5907 \u6743\u9650\u7c7b\u578b r read w write x execute","title":"File"},{"location":"computer_science/linux/linux_cmd/linux_basical/#_2","text":"chgrp\uff1a\u4fee\u6539\u6587\u4ef6\u6240\u5c5e\u7528\u6237\u7ec4 chgrp [ -R ] [ \u7528\u6237\u7ec4 ] dirname/filename chown chown [ -R ] \u8d26\u53f7\u540d\u79f0:\u7528\u6237\u7ec4\u540d\u79f0 dirname/filename chmod chmod - u,g,o,a user, group, other, all +, -, = \u52a0\u5165\uff0c\u79fb\u9664\uff0c\u8bbe\u7f6e r, w, x rwx = 4 + 2 + 1 = 7 chmod 777 .bashrc chmod u = rwx, go = rx .bashrc chmod a+w .bashrc chmod a-x .bashrc","title":"\u4fee\u6539\u6587\u4ef6\u6743\u9650\u548c\u5c5e\u6027"},{"location":"computer_science/linux/linux_cmd/linux_basical/#_3","text":"- file directory r \u8bfb\u53d6\u6587\u4ef6\u5185\u5bb9 \u8bfb\u53d6\u6587\u4ef6\u540d w \u4fee\u6539\u6587\u4ef6\u5185\u5bb9 \u4fee\u6539\u6587\u4ef6\u540d x \u6267\u884c\u6587\u4ef6 \u8fdb\u5165\u76ee\u5f55 \u5982\u679c\u4f60\u62e5\u6709\u4e00\u4e2a\u76ee\u5f55\u7684\u6743\u9650\uff0c\u4f46\u662f\u6ca1\u6709\u5176\u4e2d\u6587\u4ef6\u7684\u6743\u9650\uff0c\u53ef\u4ee5\u5220\u9664\u6587\u4ef6 \u8bfb\u53d6\u4e00\u4e2a\u76ee\u5f55\u91cc\u7684\u6587\u4ef6\uff0c\u4e00\u822c\u81f3\u5c11\u9700\u8981\u76ee\u5f55\u7684rx\u6743\u9650 linux\u7684\u6587\u4ef6\u653e\u7f6e\u6807\u51c6FHS \u6216\u8bb8\u53ef\u4ee5\u6311\u6218\u4e00\u4e0b Filesystem Hierarchy Standard 3.0 \u7684\u9605\u8bfb /usr\u662fUNIX Software Resource \u4e00\u5f20Filesystem Hierarchy Standard\u7684\u56fe\u7247","title":"\u6587\u4ef6\u6743\u9650\u548c\u76ee\u5f55\u6743\u9650"},{"location":"computer_science/linux/process_thread/basical/","text":"linux systemcall table debian man page / linux man page online linux Interrupt \u4e00\u4e2a\u8fdb\u7a0b\u521b\u5efa\u9700\u8981\u6d88\u8017\u7684\u8d44\u6e90 - \u8fdb\u7a0b\u6267\u884c\u65f6\u5019\u9700\u8981\u7684\u6570\u636e\uff08\u5185\u5b58\u4e2d\u7684\u6570\u636e\uff09 - \u8fdb\u7a0b\u5728\u521b\u5efa\u65f6\u4f1a\u4fdd\u5b58\u9875\u8868 - \u6253\u5f00\u7684\u6587\u4ef6\u7684\u4fe1\u606f - \u65f6\u95f4\uff0c\u7528\u6237\u7ec4\u7b49\u4fe1\u606f \u4e0e\u8fdb\u7a0b\u76f8\u5173\u7684\u7cfb\u7edf\u8c03\u7528\u7684\u5e38\u89c1\u4f7f\u7528\u65b9\u6cd5 - \u5148fork\u5728execve\u7684\u539f\u56e0\u662f\u7236\u4eb2\u8fdb\u7a0b\u8981\u76d1\u63a7\u5b50\u8fdb\u7a0b \u7236\u8fdb\u7a0b\u542f\u52a8fork\u51fd\u6570\u53ef\u4ee5\u4ee5 \u76f8\u540c\u7684\u5185\u5b58\u5e03\u5c40 \u590d\u5236\u51fa\u4e00\u4e2a\u5b50\u8fdb\u7a0b\uff0c\u7236\u8fdb\u7a0b\u548c\u5b50\u8fdb\u7a0b\u540c\u65f6\u4ecefork\u51fd\u6570\u5904\u8fd0\u884c\u4e0b\u53bb - \u521b\u5efa\u4e00\u4e2a\u7ebf\u7a0b\u53ef\u4ee5\u4f7f\u7528\u5199\u65f6\u590d\u5236\u7684\u65b9\u6cd5\u6765\u51cf\u5c11\u5f00\u9500 #include <unistd.h> /* return: -1 : failer 0 : in child process cpid (child process id) : in paraent process */ pid_t fork ( void ); \u56e0\u4e3afork\u51fd\u6570\u5728\u7236\u8fdb\u7a0b\u548c\u5b50\u8fdb\u7a0b\u4e2d\u7684\u8fd4\u56de\u503c\u4e0d\u4e00\u6837\uff0c\u6240\u4ee5\u5e38\u5e38\u6709\u5982\u4e0b\u5904\u7406 \u5b50\u8fdb\u7a0b\u4f7f\u7528execve\u51fd\u6570\u6267\u884c\u5176\u4ed6\u5e94\u7528\u7a0b\u5e8f\uff0cexecve\u51fd\u6570\u4f1a \u5c06\u5f53\u524d\u5185\u5b58\u7684\u5185\u5b58\u5e03\u5c40\u66ff\u6362\u4e3a\u6267\u884c\u7684\u51fd\u6570\u7684\u5185\u5b58\u5e03\u5c40 \u5f53\u4e00\u4e2a\u8fdb\u7a0b\u4f7f\u7528clone\u51fd\u6570\u751f\u6210\u4e00\u4e2a\u5b50\u8fdb\u7a0b\uff0c\u5b50\u8fdb\u7a0b\u8fd0\u884c\u53c2\u6570func\u6307\u5b9a\u7684\u51fd\u6570\uff0c\u5f53func\u8fd4\u56de\uff0c\u5b50\u8fdb\u7a0b\u5c31\u4f1a\u7ec8\u6b62\u3002clone\u4ea7\u751f\u7684\u5b50\u8fdb\u7a0b\u548cvfork\u7c7b\u4f3c\uff0c\u5171\u4eab\u7236\u8fdb\u7a0b\u7684\u5185\u5b58\uff0c\u4e0d\u4f7f\u7528\u7236\u8fdb\u7a0b\u7684\u6808\u3002\u76f8\u53cd\uff0c\u8c03\u7528\u8005\u5fc5\u987b\u5206\u914d\u4e00\u5757\u5927\u5c0f\u9002\u4e2d\u7684\u5185\u5b58\u7a7a\u95f4\u4f9b\u5b50\u8fdb\u7a0b\u7684\u6808\u4f7f\u7528\uff0c\u540c\u65f6\u5c06\u8fd9\u5757\u5185\u5b58\u7684\u6307\u9488\u7f6e\u4e8e\u53c2\u6570child_stack \u4e2d\u3002\u5728\u5927\u591a\u6570\u786c\u4ef6\u67b6\u6784\u4e2d\uff0c\u6808\u7a7a\u95f4\u7684\u589e\u957f\u65b9\u5411\u662f\u5411\u4e0b\u7684\uff0c\u6240\u4ee5\u53c2\u6570child_stack\u5e94\u5f53\u6307\u5411\u6240\u5206\u914d\u5185\u5b58\u5757\u7684\u9ad8\u7aef\u3002 \u6808\u589e\u957f\u65b9\u5411\u5bf9\u67b6\u6784\u7684\u4f9d\u8d56\u662fclone\u8bbe\u8ba1\u7684\u4e00\u5904\u7f3a\u9677\u3002clone2\u6539\u5584\u4e86\u8fd9\u4e2a\u7f3a\u9677\u3002 Pthreads\u7ebf\u7a0bAPI\u5185\u90e8\u7531clone\u7cfb\u7edf\u8c03\u7528\u5b9e\u73b0","title":"\u7ebf\u7a0b\u548c\u8fdb\u7a0b"},{"location":"computer_science/linux/tmux/tmux/","text":"tmux \u00b6 cheet sheet \u00b6 Short Cut Function Ctrl-b + % \u5782\u76f4\u5206\u5c4f Ctrl-b + \" \u6c34\u5e73\u5206\u5c4f","title":"tmux"},{"location":"computer_science/linux/tmux/tmux/#tmux","text":"","title":"tmux"},{"location":"computer_science/linux/tmux/tmux/#cheet-sheet","text":"Short Cut Function Ctrl-b + % \u5782\u76f4\u5206\u5c4f Ctrl-b + \" \u6c34\u5e73\u5206\u5c4f","title":"cheet sheet"},{"location":"computer_science/linux/vim/vim/","text":"Vim\u7684\u54f2\u5b66 \u00b6 Operator + Number + Motion Think like a Scrabble player : choose less common characters \u7b2c\u4e00\u90e8\u5206 \u00b6 \u7b2c\u4e09\u7ae0\uff1a\u63d2\u5165\u6a21\u5f0f \u00b6 \u6280\u5de713 \u00b6 \u6309\u952e\u64cd\u4f5c \u7528\u9014 <C-h> \u5220\u9664\u524d\u4e00\u4e2a\u5b57\u7b26 <C-w> \u5220\u9664\u524d\u4e00\u4e2a\u5355\u8bcd <C-u> \u5220\u81f3\u884c\u9996 \u6280\u5de714 \u00b6 \u6309\u952e\u64cd\u4f5c \u7528\u9014 <Esc> \u5207\u6362\u5230\u666e\u901a\u6a21\u5f0f <C-[> \u5207\u6362\u5230\u666e\u901a\u6a21\u5f0f <C-o> \u5207\u6362\u5230 \u63d2\u5165-\u666e\u901a\u6a21\u5f0f \u63d2\u5165-\u666e\u901a\u6a21\u5f0f \uff1a\u53ea\u6267\u884c\u4e00\u6b21\u666e\u901a\u6a21\u5f0f\u7684\u547d\u4ee4\uff0c\u7136\u540e\u8fd4\u56de\u5230\u63d2\u5165\u6a21\u5f0f\u3002(\u8fd9\u4e2a\u952e\u5728\u6211\u7684Vim\u914d\u7f6e\u4e2d\u88ab\u5360\u7528\u4e86QAQ) \u6280\u5de715 + 50 \u00b6 \u547d\u4ee4 \u7528\u9014 f{char} \u6b63\u5411\u79fb\u52a8\u5230\u4e0b\u4e00\u4e2a {char} \u6240\u5728\u5904 F{char} \u53cd\u5411\u79fb\u52a8\u5230\u4e0a\u4e00\u4e2a {char} \u6240\u5728\u5904 t{char} \u6b63\u5411\u79fb\u52a8\u5230\u4e0b\u4e00\u4e2a {char} \u6240\u5728\u5904\u4e4b\u524d\u7684\u4e00\u4e2a\u5b57\u7b26\u4e0a T{char} \u53cd\u5411\u79fb\u52a8\u5230\u4e0a\u4e00\u4e2a {char} \u6240\u5728\u5904\u4e4b\u540e\u7684\u4e00\u4e2a\u5b57\u7b26\u4e0a ; \u91cd\u590d\u4e0a\u6b21\u7684\u5b57\u7b26\u67e5\u627e\u547d\u4ee4 , \u53cd\u8f6c\u65b9\u5411\u67e5\u627e\u4e0a\u6b21\u7684\u5b57\u7b26\u67e5\u627e\u547d\u4ee4 \u547d\u4ee4 \u7528\u9014 <C-r>{register} \u63d2\u5165\u5bc4\u5b58\u5668 {register} \u5185\u7684\u5185\u5bb9 <C-r><C-p>{register} \u6309\u7167\u539f\u6765\u7684\u683c\u5f0f\u63d2\u5165\u5bc4\u5b58\u5668 {register} \u5185\u7684\u5185\u5bb9 \u4e0a\u8ff0\u4e24\u79cd\u547d\u4ee4\u7ec4\u5408\u52a0\u4e0a y \u8fd9\u4e2a\u547d\u4ee4\uff0c\u53ef\u4ee5\u6267\u884c\u590d\u5236\u4e00\u4e9b\u6587\u672c\uff0c\u7136\u540e\u63d2\u5165\u7684\u64cd\u4f5c \u6280\u5de7 16 \u00b6 <C-r>=6*35<CR> \uff1a\u53ef\u4ee5\u76f4\u63a5\u8ba1\u7b97\u51fa 6*35 \uff0c\u5229\u7528\u7684\u662f = \u5bc4\u5b58\u5668 \u6280\u5de717 + 18 \u00b6 Vim \u4f7f\u7528\u7684\u662f Unicode \u7f16\u7801 \u6309\u952e\u64cd\u4f5c \u7528\u9014 <C-v>{123} \u4ee5\u5341\u8fdb\u5236\u5b57\u7b26\u7f16\u7801\u63d2\u5165\u5b57\u7b26 <C-v>u{1234} \u4ee5\u5341\u516d\u8fdb\u5236\u5b57\u7b26\u7f16\u7801\u63d2\u5165\u5b57\u7b26 <C-v>{nondigit} \u6309\u539f\u4e49\u63d2\u5165\u975e\u6570\u5b57\u5b57\u7b26 <C-k>{char1}{char2} \u63d2\u5165\u4ee5 \u4e8c\u5408\u5b57\u7b26 {char1}{char2} \u8868\u793a\u7684\u5b57\u7b26 \u4e8c\u5408\u5b57\u7b26 <C-k> \u5c06\u5149\u6807\u79fb\u52a8\u5230\u5b57\u7b26\u4e0a\uff0c\u6309\u4e0b gc \uff0c\u5c4f\u5e55\u4e0b\u65b9\u4f1a\u663e\u793a\u8fd9\u4e2a\u5b57\u7b26\u7684\u5341\u8fdb\u5236\u3001\u5341\u516d\u8fdb\u5236\u3001\u4e8c\u5408\u8868\u793a :h digraph-table \u547d\u4ee4\u53ef\u4ee5\u67e5\u770b\u5b57\u7b26\u7684\u5404\u79cd\u8868\u793a \u4f8b\u5982 \u00bf \uff0c\u7684\u5341\u516d\u8fdb\u5236\u8868\u793a\u662f {00bf} \uff0c\u4e8c\u5408\u8868\u793a\u662f ?I \u6280\u5de7 19 \u00b6 R \uff1a\u66ff\u6362\u6a21\u5f0f\uff0c\u662f\u6309\u5b57\u7b26\u66ff\u6362\uff0c\u6240\u4ee5\u5236\u8868\u7b26\u4f1a\u88ab\u5f53\u6210\u4e00\u4e2a\u5b57\u7b26\uff08\u4f1a\u66f4\u5177 expandtab \u548c softtabstop \u7684\u8bbe\u7f6e\u800c\u53d1\u751f\u53d8\u5316\uff09 gR \uff1a\u865a\u62df\u66ff\u6362\u6a21\u5f0f\uff0c\u6309\u663e\u793a\u66ff\u6362\uff0c\u5236\u8868\u7b26\u4f1a\u5f53\u6210\u5f88\u591a\u4e2a\u7a7a\u683c r & gr \uff1a\u4e00\u6b21\u6027\u7248\u672c \u5728\u66ff\u6362\u6a21\u5f0f\u4e0b\u4f7f\u7528 \u56de\u8f66 \u6548\u679c\u5f88\u597d \u7b2c\u56db\u7ae0\uff1a\u53ef\u89c6\u6a21\u5f0f \u00b6 \u6280\u5de7 20 + 21 \u00b6 \u6280\u5de720\u7684\u540d\u5b57\u7adf\u7136\u53eb\u505a \u201c\u6df1\u5165\u7406\u89e3\u53ef\u89c6\u6a21\u5f0f\u201d Vim \u7684\u53ef\u89c6\u6a21\u5f0f\u662f\u9009\u4e2d\u6587\u672c\u7136\u540e\u8fdb\u884c\u547d\u4ee4\u64cd\u4f5c \u4e00\u822c\u7684\u7f16\u8f91\u5668\u662f\u9009\u4e2d\u6587\u672c\uff0c\u4e0b\u4e00\u4e2a\u64cd\u4f5c\u76f4\u63a5\u662f\u66ff\u6362\u6587\u672c\u4e3a\u6309\u4e0b\u7684\u5b57\u7b26 Vim \u4e2d\u7684\u8fd9\u79cd\u6a21\u5f0f\u88ab\u79f0\u4e3a \u9009\u62e9\u6a21\u5f0f \uff0c\u5728 \u53ef\u89c6\u6a21\u5f0f \u4e0b\u6309\u4e0b <C-g> \u8fdb\u5165 viw \uff1a\u8fdb\u5165\u9009\u62e9\u6a21\u5f0f\uff0c\u7136\u540e\u9009\u4e2d\u5149\u6807\u6240\u5728\u7684\u5355\u8bcd \u6309\u952e\u64cd\u4f5c \u7528\u9014\uff08\u53ef\u89c6\u6a21\u5f0f\u518d\u6309\u4e00\u904d\u4f1a\u56de\u5230\u666e\u901a\u6a21\u5f0f\uff09 v \u9762\u5411\u5b57\u7b26\u7684\u53ef\u89c6\u6a21\u5f0f V \u9762\u5411\u884c\u7684\u53ef\u89c6\u6a21\u5f0f <C-v> \u9762\u5411\u5217\u5757\u7684\u53ef\u89c6\u6a21\u5f0f o \u5207\u6362\u9ad8\u4eae\u533a\u7684\u6d3b\u52a8\u7aef gv \u91cd\u65b0\u9009\u62e9\u4e0a\u4e00\u6b21\u7531\u53ef\u89c6\u6a21\u5f0f\u9009\u62e9\u7684\u6587\u672c\u8303\u56f4 e \u597d\u50cf\u662f\u524d\u8fdb\u4e00\u4e2a\u5355\u8bcd \u6280\u5de7 22-26 \u00b6 \u4f7f\u7528 . \u4f7f\u7528 \u64cd\u4f5c\u7b26\u547d\u4ee4 \u5927\u4e8e \u53ef\u89c6 \u547d\u4ee4 gU{motion} \uff1a\u4f7f {motion} \u4f5c\u7528\u7684\u6587\u672c\u5927\u5199 \u5217\u5757\u53ef\u89c6\u6a21\u5f0f\u4fee\u6539\uff0c\u5728\u63d2\u5165\u6a21\u5f0f\u4e0b\u53ea\u663e\u793a\u7b2c\u4e00\u884c\uff0c\u8fd4\u56de\u666e\u901a\u6a21\u5f0f\u540e\u663e\u793a\u6240\u6709\u884c <C-v>$ \u5c06\u9009\u533a\u6269\u5c55\u81f3\u6bcf\u884c\u7684\u884c\u5c3e \u7b2c\u4e94\u7ae0\uff1a\u547d\u4ee4\u884c\u6a21\u5f0f \u00b6 \u6280\u5de7 27 \u00b6 :h ex-cmd-index \uff1a\u547d\u4ee4\u884c\u7684\u547d\u4ee4\u4ecb\u7ecd \u547d\u4ee4 \u7528\u9014 :[range]delete[x] \u5220\u9664\u6307\u5b9a\u8303\u56f4\u5185\u7684\u884c\uff08\u5230\u5bc4\u5b58\u5668x\uff09 :[range]yank[x] \u590d\u5236\u6307\u5b9a\u8303\u56f4\u7684\u884c\uff08\u5230\u5bc4\u5b58\u5668x\uff09 :[line]put[x] \u5728\u6307\u5b9a\u884c\u540e\u7c98\u8d34\u5bc4\u5b58\u5668x\u4e2d\u7684\u5185\u5bb9 :[range]copy{adress} \u628a\u6307\u5b9a\u8303\u56f4\u5185\u7684\u884c\u62f7\u8d1d\u5230{adress}\u6307\u5b9a\u7684\u884c\u4e0b :[range]move{adress} \u628a\u6307\u5b9a\u8303\u56f4\u5185\u7684\u884c\u79fb\u52a8\u5230{adress}\u6307\u5b9a\u7684\u884c\u4e0b :[range]join \u8fde\u63a5\u6307\u5b9a\u8303\u56f4\u5185\u7684\u884c :[range]normal {commands} \u5bf9\u6307\u5b9a\u8303\u56f4\u5185\u7684\u6bcf\u4e00\u884c\u6267\u884c\u666e\u901a\u6a21\u5f0f\u7684\u547d\u4ee4{commands} :[range]substitute/{pattern}/{string}/[flags] \u628a\u5bf9\u6307\u5b9a\u8303\u56f4\u5185\u51fa\u73b0{pattern}\u7684\u5730\u65b9\u66ff\u6362\u4e3a{string} :[range]global/{pattern}/[cmd] \u628a\u5bf9\u6307\u5b9a\u8303\u56f4\u5185\u5339\u914d{pattern}\u7684\u6240\u6709\u884c\u6267\u884cEx\u547d\u4ee4{cmd} \u6280\u5de7 28 \u00b6 \u4e0b\u5217\u662f\u5728\u547d\u4ee4\u6a21\u5f0f\u4e0b\u8f93\u5165 : \u53ef\u4ee5\u9009\u62e9\u884c\u53f7\u7684\u4e00\u4e9b\u547d\u4ee4 \u7b26\u53f7 \u5730\u5740 1 \u7b2c\u4e00\u884c $ \u6700\u540e\u4e00\u884c 0 \u865a\u62df\u884c\uff0c\u4f4d\u4e8e\u7b2c\u4e00\u884c\u4e0a\u65b9 . \u5149\u6807\u6240\u5728\u884c 'm \u5305\u542b\u4f4d\u7f6e\u6807\u8bb0 m \u6240\u5728\u7684\u884c '< \u9ad8\u4eae\u9009\u533a\u7684\u8d77\u59cb\u884c '> \u9ad8\u4eae\u9009\u533a\u7684\u7ed3\u675f\u884c % \u6574\u4e2a\u6587\u4ef6 1, $ \u5730\u5740\u7684\u8868\u793a\u5f62\u5f0f\u662f {start},{end} \u5730\u5740\u7684\u504f\u79fb {adress} + n n \u7701\u7565\u9ed8\u8ba4\u4e3a 1 \uff0c {adress} \u53ef\u4ee5\u662f\u884c\u53f7\uff0c\u4f4d\u7f6e\u6807\u8bb0\uff0c\u6216\u8005 \u67e5\u627e\u6a21\u5f0f \u6280\u5de7 29 \u00b6 \u547d\u4ee4 \u4f5c\u7528 :[range] t {adress} \u590d\u5236 [range] \u5185\u7684\u5185\u5bb9\u5230 {adress} \u884c\u4e0b :[range] m {adress} \u79fb\u52a8 [range] \u5185\u7684\u5185\u5bb9\u5230 {adress} \u884c\u4e0b t \u7684\u590d\u6742\u7248\u672c copy \u6216\u8005 co m \u7684\u590d\u6742\u7248\u672c move @: \u91cd\u590d\u4e0a\u6b21\u7684\u547d\u4ee4 \u4e00\u4e9b\u5e38\u89c1\u7528\u6cd5 :t. \u76f8\u5f53\u4e8e yyp :'<, '>0 \u628a\u9ad8\u4eae\u9009\u533a\u884c\u590d\u5236\u5230\u6587\u4ef6\u5f00\u5934 \u7b2c\u4e8c\u90e8\u5206 \u00b6 \u6280\u5de7 36 \u00b6 \u4e00\u822c\u4f7f\u7528vim\u6b63\u5728\u7f16\u8f91\u7684\u6587\u4ef6\u662f\u6587\u4ef6\u7684\u7f13\u51b2\u533a buffer Ex\u547d\u4ee4 \u6548\u679c :ls :bnext :bprev :bfirst :bnext :buffer N :buffer {buffername} \uff1abdelete \u5220\u9664\u7f13\u51b2\u533a\uff0c :bdelete B1 B1 , :N, M bdelete :bufdo \u5bf9\u6240\u6709\u7f13\u51b2\u533a\u540c\u65f6\u6267\u884c Ex \u547d\u4ee4 \u6280\u5de7 37 \u00b6 \u53c2\u6570\u5217\u8868\uff1a \u8bb0\u5f55\u4e86\u5728 vim \u542f\u52a8\u65f6\u53c2\u6570\u4f20\u9012\u7ed9 vim \u7684\u6587\u4ef6\u5217\u8868 Ex\u547d\u4ee4 \u6548\u679c :args {arglist} {arglist} \u53ef\u4ee5\u4f7f\u7528\u901a\u914d\u7b26\u5339\u914d\u4e00\u4e9b\u6587\u4ef6 :args *.* , :args **/*.js :args `cat .chapter` : \u53ef\u4ee5\u5c06 cat \u7684\u8f93\u51fa\u4f5c\u4e3a args \u7684\u8f93\u5165 Ex\u547d\u4ee4 \u6548\u679c :next :prev :argdo \u5bf9\u6240\u6709\u7684\u7f13\u51b2\u533a\u540c\u65f6\u6267\u884c Ex \u547d\u4ee4 \u6280\u5de7 38 \u00b6 \u53ef\u4ee5\u542f\u7528 hidden \u4f7f\u5728 buffer \u4e4b\u95f4\u8df3\u8f6c\u7684\u65f6\u5019\u4e0d\u7528\u4fdd\u5b58 \u6216\u8005\u4f7f\u7528 :next! Ex\u547d\u4ee4 \u6548\u679c :edit \u53ef\u4ee5\u56de\u6eda \u6280\u5de7 39 \u00b6 \u7b2c\u4e09\u90e8\u5206: \u66f4\u5feb\u7684\u79fb\u52a8\u53ca\u8df3\u8f6c \u00b6 \u7b2c\u516b\u7ae0\uff1a\u7528\u547d\u4ee4\u5728\u6587\u6863\u4e2d\u79fb\u52a8 \u00b6 \u6280\u5de747-48 \u00b6 :h motion.txt Vim \u6709 \u5c4f\u5e55\u884c \u548c \u5b9e\u9645\u884c \u7684\u6982\u5ff5 \u52a8\u4f5c\u7684\u4f5c\u7528 \u5c4f\u5e55\u884c \u5b9e\u9645\u884c left, up, down, right h , j , k , l gh , gj , gk , gl \u884c\u9996\uff0c\u884c\u5c3e\uff0c\u7b2c\u4e00\u4e2a\u975e\u7a7a\u767d\u5b57\u7b26 0 , $ , ^ g0 , g$ , g^ \u6280\u5de749 \u00b6 \u4e0a\u8ff0\u662f\u57fa\u4e8e\u5355\u8bcd(word)\u7684\u79fb\u52a8 \u5728 Vim \u4e2d\u6709\u8fde\u4e2a\u4e0d\u540c\u7684\u6982\u5ff5 word \u548c WORD :h word , :h WORD word WORD b B w W e E ge gE \u6280\u5de751-53 \u00b6 Vim \u7684\u64cd\u4f5c\u54f2\u5b66\u662f operator + number + motion \uff0c\u5728\u672c\u7ae0\u4e2d\u7684\u4e00\u4e9b\u6280\u5de7\u90fd\u662f motion d{motion} , c{motion} , v{motion} \u8fd8\u53ef\u4ee5\u4f7f\u7528\u67e5\u627e\u547d\u4ee4 \\ \u4f5c\u7528 \u547d\u4ee4 \u9009\u62e9\u4e00\u5bf9\u5206\u9694\u7b26\u5185\u90e8\u7684\u533a\u57df i \u9009\u62e9\u4e00\u5bf9\u5206\u9694\u7b26\u5185\u90e8\u7684\u533a\u57df\u4ee5\u53ca\u5206\u9694\u7b26 a \u53ef\u9009\u5206\u9694\u7b26 ) } ] ' \" ` t :\u8868\u793axml\u6807\u7b7e <xml>tag<xml> \u6587\u672c\u5bf9\u8c61 \u9009\u62e9\u8303\u56f4 iw \u5f53\u524d\u5355\u8bcd(word) iW \u5f53\u524d\u5b57\u4e32(WORD) is \u5f53\u524d\u53e5\u5b50 ip \u5f53\u524d\u6bb5\u843d aW \u5f53\u524d\u5b57\u4e32(WORD)\u4ee5\u53ca\u4e00\u4e2a\u7a7a\u683c as \u5f53\u524d\u53e5\u5b50\u4ee5\u53ca\u4e00\u4e2a\u7a7a\u683c ap \u5f53\u524d\u6bb5\u843d\u4ee5\u53ca\u4e00\u4e2a \u7a7a\u884c \u6280\u5de754:\u4f4d\u7f6e\u6807\u8bb0\u548c\u8df3\u8f6c \u00b6 1. \u8bbe\u7f6e\u6807\u8bb0 \u00b6 m{a-zA-Z} \u8bbe\u7f6e\u4f4d\u7f6e\u6807\u8bb0 `{mark} \u8df3\u8f6c\u5230\u4f4d\u7f6e\u6807\u8bb0\u6240\u5728\u7684\u884c\u3001\u5217 '{mark} \u8df3\u8f6c\u5230\u4f4d\u7f6e\u6807\u8bb0\u6240\u5728\u7684\u884c \u5c0f\u5199\u4f4d\u7f6e\u6807\u8bb0\u53ea\u5728\u6bcf\u4e2a\u7f13\u51b2\u533a\u5c40\u90e8\u53ef\u89c1 \u5927\u5199\u4f4d\u7f6e\u6807\u8bb0\u5219\u5168\u5c40\u53ef\u89c1 2. \u81ea\u52a8\u4f4d\u7f6e\u6807\u8bb0 \u00b6 \u4f4d\u7f6e\u6807\u8bb0 \u8df3\u8f6c\u5230 `` \u5f53\u524d\u6587\u4ef6\u4e2d\u4e0a\u6b21\u8df3\u8f6c\u52a8\u4f5c\u4e4b\u524d\u7684\u4f4d\u7f6e `. \u4e0a\u6b21\u4fee\u6539\u7684\u5730\u65b9 `^ \u4e0a\u6b21\u63d2\u5165\u7684\u5730\u65b9 `[ \u4e0a\u6b21\u4fee\u6539\u6216\u590d\u5236\u7684\u8d77\u59cb\u4f4d\u7f6e `] \u4e0a\u6b21\u4fee\u6539\u6216\u590d\u5236\u7684\u7ed3\u675f\u4f4d\u7f6e `< \u4e0a\u6b21\u9ad8\u4eae\u9009\u533a\u7684\u8d77\u59cb\u4f4d\u7f6e `> \u4e0a\u6b21\u9ad8\u4eae\u9009\u533a\u7684\u7ed3\u675f\u4f4d\u7f6e \u6280\u5de7 55 \u00b6 \u547d\u4ee4 \u4f5c\u7528 % \u8df3\u8f6c\u5230\u6240\u5339\u914d\u7684\u62ec\u53f7\u7684\u4f4d\u7f6e \u5e38\u5e38\u7528\u6b64\u529f\u80fd\u4fee\u6539\u4e00\u5bf9\u62ec\u53f7\u7684\u6837\u5f0f\uff0c\u4f8b\u5982\u5c06 {London Berlin New York} \u4fee\u6539\u4e3a [London Berlin New York] \u4f7f\u7528\u4e86 `` Tips \u00b6 matchit \u968f vim \u4e00\u8d77\u53d1\u5e03\uff0c\u4f46\u5b83\u7f3a\u7701\u5e76\u672a\u4f7f\u80fd \" \u5c06\u8fd9\u4e00\u6bb5\u5185\u5bb9\u52a0\u5165vimrc set nocompatible filetype plugin on runtime macros/matchit.vim \u63a8\u8350\u4e00\u4e2a\u63d2\u4ef6 surround \u7b2c\u4e5d\u7ae0\uff1a\u5728\u6587\u4ef6\u95f4\u8df3\u8f6c \u00b6 \u6280\u5de756 \u00b6 \u8df3\u8f6c\u7684\u547d\u4ee4 <C-o> <C-i> \u4ec0\u4e48\u662f\u8df3\u8f6c :jumps \u4efb\u4f55\u5927\u8303\u56f4\u7684\u79fb\u52a8\u90fd\u88ab\u5f53\u6210\u8df3\u8f6c(hjkl, \u9762\u5411\u5b57\u7b26\u548c\u5355\u8bcd\u7684\u79fb\u52a8\u4e0d\u7b97) ( / ) \u8df3\u5230\u4e0a\u4e00\u53e5/\u4e0b\u4e00\u53e5\u7684\u5f00\u5934 H / M / L \u8df3\u5230\u5c4f\u5e55\u7684\u6700\u4e0a\u65b9/\u4e2d\u95f4/\u6700\u4e0b\u65b9 gf \u8df3\u8f6c\u5230\u5149\u6807\u4e0b\u7684\u6587\u4ef6\u540d <C-]> \u8df3\u8f6c\u5230\u5149\u6807\u4e0b\u5173\u952e\u5b57\u5b9a\u4e49\u4e4b\u5904 vim \u628a <Tab> \u548c <C-i> \u8ba4\u4e3a\u662f\u4e00\u4e2a\u4e1c\u897f \u6280\u5de757 \u00b6 :changs g; \u4e0a\u6b21\u8fdb\u884c\u6539\u53d8\u7684\u4f4d\u7f6e g, \u4e0e\u4e0a\u4e2a\u547d\u4ee4\u76f8\u53cd \u64a4\u9500/\u53cd\u64a4\u9500 u <C-r> \u4e00\u4e2a\u7f13\u51b2\u533a\u4e00\u4e2a\u6539\u53d8\u5217\u8868\uff0c\u4e00\u4e2a\u7a97\u53e3\u4e00\u4e2a\u8df3\u8f6c\u5217\u8868 \u6280\u5de758 \u00b6 gf \u8df3\u8f6c\u5230\u6587\u4ef6 \" \u53ef\u4ee5\u8bbe\u7f6e\u4e00\u4e2a\u6216\u591a\u4e2a\u6269\u5c55\u540d\u5b57 :set suffixesadd+=.md \u8fd8\u53ef\u4ee5\u8bbe\u7f6e path \uff0c\u8be6\u60c5\u8bf7\u89c1 :set path \u4e66\u4e0a\u6709\u4e00\u6bb5\u6ca1\u6709\u6284 \u63a8\u8350\u4e24\u4e2a\u63d2\u4ef6 ruby , bunlder \u6280\u5de759 \u00b6 \u6ce8\u610f\u8bbe\u7f6e\u5168\u5c40\u6807\u8bb0 - m + Upcase_letter \u7b2c\u56db\u90e8\u5206:\u5bc4\u5b58\u5668 \u00b6 \u7b2c\u5341\u7ae0\uff1a\u590d\u5236\u4e0e\u7c98\u8d34 \u00b6 \u6280\u5de760-61 \u00b6 \"{register} \uff1a\u53ef\u4ee5\u6307\u5b9a\u5bc4\u5b58\u5668 \u4f7f\u7528 y{motion} \u547d\u4ee4\uff0c\u8981\u590d\u5236\u7684\u6587\u672c\u540c\u65f6\u88ab\u62f7\u8d1d\u8fdb\u5165\u65e0\u540d\u5bc4\u5b58\u5668 \"\" \uff0c\u548c\u590d\u5236\u4e13\u7528\u5bc4\u5b58\u5668 \"0 \u5bc4\u5b58\u5668 \u4f5c\u7528 \"\" \"{a-z} \"0 \"_ \u9ed1\u6d1e\u5bc4\u5b58\u5668 \"+ X11\u526a\u5207\u677f\uff0c\u7528\u526a\u5207\u3001\u590d\u5236\u4e0e\u7c98\u8d34\u547d\u4ee4\u64cd\u4f5c X11\u4e3b\u526a\u5207\u677f\uff0c\u7528\u9f20\u6807\u4e2d\u952e\u64cd\u4f5c(Windows \u548c Mac OSX\u6ca1\u6709) \"+p \uff1a\u53ef\u4ee5\u7c98\u8d34\u7cfb\u7edf\u526a\u5207\u677f\u7684\u5185\u5bb9, \u63d2\u5165\u6a21\u5f0f\u4e0b\u4f7f\u7528 <C-r>+ \u53ea\u8bfb\u5bc4\u5b58\u5668 \"% \u5f53\u524d\u6587\u4ef6\u540d \"# \u8f6e\u6362\u6587\u4ef6\u540d \". \u4e0a\u6b21\u63d2\u5165\u7684\u6587\u672c \": \u4e0a\u6b21\u6267\u884c\u7684Ex\u547d\u4ee4 \"/ \uff1a(\u53ef\u4ee5\u901a\u8fc7 :let \u6539\u53d8) \u4e0a\u6b21\u67e5\u627e\u7684\u6a21\u5f0f \u6280\u5de762 - 63 \u00b6 P \u7c98\u8d34\u5230\u5f53\u524d\u4f4d\u7f6e\u4e4b\u524d gp \u4e0e p \u4f5c\u7528\u76f8\u540c\uff0c\u5149\u6807\u4f4d\u7f6e\u5728\u5f53\u524d\u4f4d\u7f6e\u7684\u7ed3\u5c3e\u800c\u4e0d\u662f\u5f00\u5934 gP \u4e0e P \u4f5c\u7528\u76f8\u540c\uff0c\u5149\u6807\u4f4d\u7f6e\u5728\u5f53\u524d\u6587\u672c\u4f4d\u7f6e\u7684\u7ed3\u5c3e\u800c\u4e0d\u662f\u5f00\u5934 \u6280\u5de7 64 \u00b6 \u61d2\u5f97\u770b \u7b2c11\u7ae0:\u5b8f \u00b6 \u6280\u5de7 65 - 68 \u00b6 \u4f7f\u7528 q{register} \u5f00\u59cb\u5f55\u5236\u5b8f\uff0c\u4f7f\u7528 q \u7ed3\u675f\u5f55\u5236 reg {register} \u770b register \u4e2d\u7684\u5185\u5bb9 n@{register} \u591a\u6b21\u6267\u884c Visual\u591a\u884c\u9009\u4e2d\uff0c\u518d normal @a \u53ef\u4ee5\u5e76\u884c\u6267\u884c \u6280\u5de7 69 \u00b6 \u4f7f\u7528 q{REGISTER} \u52a0\u5185\u5bb9\u5728 q{register} \u4e4b\u540e\u3002 \u6280\u5de7 70 \u00b6 \u5728\u4e00\u7ec4\u6587\u4ef6\u4e2d\u6267\u884c\u5b8f\uff0c\u4f46\u662f\u6211\u61d2\u5f97\u770b \u6280\u5de7 71 \u00b6 \u4e00\u70b9\u70b9vim\u811a\u672c let i = 0 echo i let i += 1 - \u7528\u6765\u7d2f\u52a0 let i = 1 qa I<C-r>=i<CR>)<Esc> let i += 123 q \u6280\u5de772 \u4fee\u6539\u5b8f \u00b6 \u76f4\u63a5\u4fee\u6539\u5b8f\u7684\u5bc4\u5b58\u5668\u4e2d\u7684\u5185\u5bb9 put a \u4fee\u6539\u5185\u5bb9 \"ay$","title":"vim"},{"location":"computer_science/linux/vim/vim/#vim","text":"Operator + Number + Motion Think like a Scrabble player : choose less common characters","title":"Vim\u7684\u54f2\u5b66"},{"location":"computer_science/linux/vim/vim/#_1","text":"","title":"\u7b2c\u4e00\u90e8\u5206"},{"location":"computer_science/linux/vim/vim/#_2","text":"","title":"\u7b2c\u4e09\u7ae0\uff1a\u63d2\u5165\u6a21\u5f0f"},{"location":"computer_science/linux/vim/vim/#13","text":"\u6309\u952e\u64cd\u4f5c \u7528\u9014 <C-h> \u5220\u9664\u524d\u4e00\u4e2a\u5b57\u7b26 <C-w> \u5220\u9664\u524d\u4e00\u4e2a\u5355\u8bcd <C-u> \u5220\u81f3\u884c\u9996","title":"\u6280\u5de713"},{"location":"computer_science/linux/vim/vim/#14","text":"\u6309\u952e\u64cd\u4f5c \u7528\u9014 <Esc> \u5207\u6362\u5230\u666e\u901a\u6a21\u5f0f <C-[> \u5207\u6362\u5230\u666e\u901a\u6a21\u5f0f <C-o> \u5207\u6362\u5230 \u63d2\u5165-\u666e\u901a\u6a21\u5f0f \u63d2\u5165-\u666e\u901a\u6a21\u5f0f \uff1a\u53ea\u6267\u884c\u4e00\u6b21\u666e\u901a\u6a21\u5f0f\u7684\u547d\u4ee4\uff0c\u7136\u540e\u8fd4\u56de\u5230\u63d2\u5165\u6a21\u5f0f\u3002(\u8fd9\u4e2a\u952e\u5728\u6211\u7684Vim\u914d\u7f6e\u4e2d\u88ab\u5360\u7528\u4e86QAQ)","title":"\u6280\u5de714"},{"location":"computer_science/linux/vim/vim/#15-50","text":"\u547d\u4ee4 \u7528\u9014 f{char} \u6b63\u5411\u79fb\u52a8\u5230\u4e0b\u4e00\u4e2a {char} \u6240\u5728\u5904 F{char} \u53cd\u5411\u79fb\u52a8\u5230\u4e0a\u4e00\u4e2a {char} \u6240\u5728\u5904 t{char} \u6b63\u5411\u79fb\u52a8\u5230\u4e0b\u4e00\u4e2a {char} \u6240\u5728\u5904\u4e4b\u524d\u7684\u4e00\u4e2a\u5b57\u7b26\u4e0a T{char} \u53cd\u5411\u79fb\u52a8\u5230\u4e0a\u4e00\u4e2a {char} \u6240\u5728\u5904\u4e4b\u540e\u7684\u4e00\u4e2a\u5b57\u7b26\u4e0a ; \u91cd\u590d\u4e0a\u6b21\u7684\u5b57\u7b26\u67e5\u627e\u547d\u4ee4 , \u53cd\u8f6c\u65b9\u5411\u67e5\u627e\u4e0a\u6b21\u7684\u5b57\u7b26\u67e5\u627e\u547d\u4ee4 \u547d\u4ee4 \u7528\u9014 <C-r>{register} \u63d2\u5165\u5bc4\u5b58\u5668 {register} \u5185\u7684\u5185\u5bb9 <C-r><C-p>{register} \u6309\u7167\u539f\u6765\u7684\u683c\u5f0f\u63d2\u5165\u5bc4\u5b58\u5668 {register} \u5185\u7684\u5185\u5bb9 \u4e0a\u8ff0\u4e24\u79cd\u547d\u4ee4\u7ec4\u5408\u52a0\u4e0a y \u8fd9\u4e2a\u547d\u4ee4\uff0c\u53ef\u4ee5\u6267\u884c\u590d\u5236\u4e00\u4e9b\u6587\u672c\uff0c\u7136\u540e\u63d2\u5165\u7684\u64cd\u4f5c","title":"\u6280\u5de715 + 50"},{"location":"computer_science/linux/vim/vim/#16","text":"<C-r>=6*35<CR> \uff1a\u53ef\u4ee5\u76f4\u63a5\u8ba1\u7b97\u51fa 6*35 \uff0c\u5229\u7528\u7684\u662f = \u5bc4\u5b58\u5668","title":"\u6280\u5de7 16"},{"location":"computer_science/linux/vim/vim/#17-18","text":"Vim \u4f7f\u7528\u7684\u662f Unicode \u7f16\u7801 \u6309\u952e\u64cd\u4f5c \u7528\u9014 <C-v>{123} \u4ee5\u5341\u8fdb\u5236\u5b57\u7b26\u7f16\u7801\u63d2\u5165\u5b57\u7b26 <C-v>u{1234} \u4ee5\u5341\u516d\u8fdb\u5236\u5b57\u7b26\u7f16\u7801\u63d2\u5165\u5b57\u7b26 <C-v>{nondigit} \u6309\u539f\u4e49\u63d2\u5165\u975e\u6570\u5b57\u5b57\u7b26 <C-k>{char1}{char2} \u63d2\u5165\u4ee5 \u4e8c\u5408\u5b57\u7b26 {char1}{char2} \u8868\u793a\u7684\u5b57\u7b26 \u4e8c\u5408\u5b57\u7b26 <C-k> \u5c06\u5149\u6807\u79fb\u52a8\u5230\u5b57\u7b26\u4e0a\uff0c\u6309\u4e0b gc \uff0c\u5c4f\u5e55\u4e0b\u65b9\u4f1a\u663e\u793a\u8fd9\u4e2a\u5b57\u7b26\u7684\u5341\u8fdb\u5236\u3001\u5341\u516d\u8fdb\u5236\u3001\u4e8c\u5408\u8868\u793a :h digraph-table \u547d\u4ee4\u53ef\u4ee5\u67e5\u770b\u5b57\u7b26\u7684\u5404\u79cd\u8868\u793a \u4f8b\u5982 \u00bf \uff0c\u7684\u5341\u516d\u8fdb\u5236\u8868\u793a\u662f {00bf} \uff0c\u4e8c\u5408\u8868\u793a\u662f ?I","title":"\u6280\u5de717 + 18"},{"location":"computer_science/linux/vim/vim/#19","text":"R \uff1a\u66ff\u6362\u6a21\u5f0f\uff0c\u662f\u6309\u5b57\u7b26\u66ff\u6362\uff0c\u6240\u4ee5\u5236\u8868\u7b26\u4f1a\u88ab\u5f53\u6210\u4e00\u4e2a\u5b57\u7b26\uff08\u4f1a\u66f4\u5177 expandtab \u548c softtabstop \u7684\u8bbe\u7f6e\u800c\u53d1\u751f\u53d8\u5316\uff09 gR \uff1a\u865a\u62df\u66ff\u6362\u6a21\u5f0f\uff0c\u6309\u663e\u793a\u66ff\u6362\uff0c\u5236\u8868\u7b26\u4f1a\u5f53\u6210\u5f88\u591a\u4e2a\u7a7a\u683c r & gr \uff1a\u4e00\u6b21\u6027\u7248\u672c \u5728\u66ff\u6362\u6a21\u5f0f\u4e0b\u4f7f\u7528 \u56de\u8f66 \u6548\u679c\u5f88\u597d","title":"\u6280\u5de7 19"},{"location":"computer_science/linux/vim/vim/#_3","text":"","title":"\u7b2c\u56db\u7ae0\uff1a\u53ef\u89c6\u6a21\u5f0f"},{"location":"computer_science/linux/vim/vim/#20-21","text":"\u6280\u5de720\u7684\u540d\u5b57\u7adf\u7136\u53eb\u505a \u201c\u6df1\u5165\u7406\u89e3\u53ef\u89c6\u6a21\u5f0f\u201d Vim \u7684\u53ef\u89c6\u6a21\u5f0f\u662f\u9009\u4e2d\u6587\u672c\u7136\u540e\u8fdb\u884c\u547d\u4ee4\u64cd\u4f5c \u4e00\u822c\u7684\u7f16\u8f91\u5668\u662f\u9009\u4e2d\u6587\u672c\uff0c\u4e0b\u4e00\u4e2a\u64cd\u4f5c\u76f4\u63a5\u662f\u66ff\u6362\u6587\u672c\u4e3a\u6309\u4e0b\u7684\u5b57\u7b26 Vim \u4e2d\u7684\u8fd9\u79cd\u6a21\u5f0f\u88ab\u79f0\u4e3a \u9009\u62e9\u6a21\u5f0f \uff0c\u5728 \u53ef\u89c6\u6a21\u5f0f \u4e0b\u6309\u4e0b <C-g> \u8fdb\u5165 viw \uff1a\u8fdb\u5165\u9009\u62e9\u6a21\u5f0f\uff0c\u7136\u540e\u9009\u4e2d\u5149\u6807\u6240\u5728\u7684\u5355\u8bcd \u6309\u952e\u64cd\u4f5c \u7528\u9014\uff08\u53ef\u89c6\u6a21\u5f0f\u518d\u6309\u4e00\u904d\u4f1a\u56de\u5230\u666e\u901a\u6a21\u5f0f\uff09 v \u9762\u5411\u5b57\u7b26\u7684\u53ef\u89c6\u6a21\u5f0f V \u9762\u5411\u884c\u7684\u53ef\u89c6\u6a21\u5f0f <C-v> \u9762\u5411\u5217\u5757\u7684\u53ef\u89c6\u6a21\u5f0f o \u5207\u6362\u9ad8\u4eae\u533a\u7684\u6d3b\u52a8\u7aef gv \u91cd\u65b0\u9009\u62e9\u4e0a\u4e00\u6b21\u7531\u53ef\u89c6\u6a21\u5f0f\u9009\u62e9\u7684\u6587\u672c\u8303\u56f4 e \u597d\u50cf\u662f\u524d\u8fdb\u4e00\u4e2a\u5355\u8bcd","title":"\u6280\u5de7 20 + 21"},{"location":"computer_science/linux/vim/vim/#22-26","text":"\u4f7f\u7528 . \u4f7f\u7528 \u64cd\u4f5c\u7b26\u547d\u4ee4 \u5927\u4e8e \u53ef\u89c6 \u547d\u4ee4 gU{motion} \uff1a\u4f7f {motion} \u4f5c\u7528\u7684\u6587\u672c\u5927\u5199 \u5217\u5757\u53ef\u89c6\u6a21\u5f0f\u4fee\u6539\uff0c\u5728\u63d2\u5165\u6a21\u5f0f\u4e0b\u53ea\u663e\u793a\u7b2c\u4e00\u884c\uff0c\u8fd4\u56de\u666e\u901a\u6a21\u5f0f\u540e\u663e\u793a\u6240\u6709\u884c <C-v>$ \u5c06\u9009\u533a\u6269\u5c55\u81f3\u6bcf\u884c\u7684\u884c\u5c3e","title":"\u6280\u5de7 22-26"},{"location":"computer_science/linux/vim/vim/#_4","text":"","title":"\u7b2c\u4e94\u7ae0\uff1a\u547d\u4ee4\u884c\u6a21\u5f0f"},{"location":"computer_science/linux/vim/vim/#27","text":":h ex-cmd-index \uff1a\u547d\u4ee4\u884c\u7684\u547d\u4ee4\u4ecb\u7ecd \u547d\u4ee4 \u7528\u9014 :[range]delete[x] \u5220\u9664\u6307\u5b9a\u8303\u56f4\u5185\u7684\u884c\uff08\u5230\u5bc4\u5b58\u5668x\uff09 :[range]yank[x] \u590d\u5236\u6307\u5b9a\u8303\u56f4\u7684\u884c\uff08\u5230\u5bc4\u5b58\u5668x\uff09 :[line]put[x] \u5728\u6307\u5b9a\u884c\u540e\u7c98\u8d34\u5bc4\u5b58\u5668x\u4e2d\u7684\u5185\u5bb9 :[range]copy{adress} \u628a\u6307\u5b9a\u8303\u56f4\u5185\u7684\u884c\u62f7\u8d1d\u5230{adress}\u6307\u5b9a\u7684\u884c\u4e0b :[range]move{adress} \u628a\u6307\u5b9a\u8303\u56f4\u5185\u7684\u884c\u79fb\u52a8\u5230{adress}\u6307\u5b9a\u7684\u884c\u4e0b :[range]join \u8fde\u63a5\u6307\u5b9a\u8303\u56f4\u5185\u7684\u884c :[range]normal {commands} \u5bf9\u6307\u5b9a\u8303\u56f4\u5185\u7684\u6bcf\u4e00\u884c\u6267\u884c\u666e\u901a\u6a21\u5f0f\u7684\u547d\u4ee4{commands} :[range]substitute/{pattern}/{string}/[flags] \u628a\u5bf9\u6307\u5b9a\u8303\u56f4\u5185\u51fa\u73b0{pattern}\u7684\u5730\u65b9\u66ff\u6362\u4e3a{string} :[range]global/{pattern}/[cmd] \u628a\u5bf9\u6307\u5b9a\u8303\u56f4\u5185\u5339\u914d{pattern}\u7684\u6240\u6709\u884c\u6267\u884cEx\u547d\u4ee4{cmd}","title":"\u6280\u5de7 27"},{"location":"computer_science/linux/vim/vim/#28","text":"\u4e0b\u5217\u662f\u5728\u547d\u4ee4\u6a21\u5f0f\u4e0b\u8f93\u5165 : \u53ef\u4ee5\u9009\u62e9\u884c\u53f7\u7684\u4e00\u4e9b\u547d\u4ee4 \u7b26\u53f7 \u5730\u5740 1 \u7b2c\u4e00\u884c $ \u6700\u540e\u4e00\u884c 0 \u865a\u62df\u884c\uff0c\u4f4d\u4e8e\u7b2c\u4e00\u884c\u4e0a\u65b9 . \u5149\u6807\u6240\u5728\u884c 'm \u5305\u542b\u4f4d\u7f6e\u6807\u8bb0 m \u6240\u5728\u7684\u884c '< \u9ad8\u4eae\u9009\u533a\u7684\u8d77\u59cb\u884c '> \u9ad8\u4eae\u9009\u533a\u7684\u7ed3\u675f\u884c % \u6574\u4e2a\u6587\u4ef6 1, $ \u5730\u5740\u7684\u8868\u793a\u5f62\u5f0f\u662f {start},{end} \u5730\u5740\u7684\u504f\u79fb {adress} + n n \u7701\u7565\u9ed8\u8ba4\u4e3a 1 \uff0c {adress} \u53ef\u4ee5\u662f\u884c\u53f7\uff0c\u4f4d\u7f6e\u6807\u8bb0\uff0c\u6216\u8005 \u67e5\u627e\u6a21\u5f0f","title":"\u6280\u5de7 28"},{"location":"computer_science/linux/vim/vim/#29","text":"\u547d\u4ee4 \u4f5c\u7528 :[range] t {adress} \u590d\u5236 [range] \u5185\u7684\u5185\u5bb9\u5230 {adress} \u884c\u4e0b :[range] m {adress} \u79fb\u52a8 [range] \u5185\u7684\u5185\u5bb9\u5230 {adress} \u884c\u4e0b t \u7684\u590d\u6742\u7248\u672c copy \u6216\u8005 co m \u7684\u590d\u6742\u7248\u672c move @: \u91cd\u590d\u4e0a\u6b21\u7684\u547d\u4ee4 \u4e00\u4e9b\u5e38\u89c1\u7528\u6cd5 :t. \u76f8\u5f53\u4e8e yyp :'<, '>0 \u628a\u9ad8\u4eae\u9009\u533a\u884c\u590d\u5236\u5230\u6587\u4ef6\u5f00\u5934","title":"\u6280\u5de7 29"},{"location":"computer_science/linux/vim/vim/#_5","text":"","title":"\u7b2c\u4e8c\u90e8\u5206"},{"location":"computer_science/linux/vim/vim/#36","text":"\u4e00\u822c\u4f7f\u7528vim\u6b63\u5728\u7f16\u8f91\u7684\u6587\u4ef6\u662f\u6587\u4ef6\u7684\u7f13\u51b2\u533a buffer Ex\u547d\u4ee4 \u6548\u679c :ls :bnext :bprev :bfirst :bnext :buffer N :buffer {buffername} \uff1abdelete \u5220\u9664\u7f13\u51b2\u533a\uff0c :bdelete B1 B1 , :N, M bdelete :bufdo \u5bf9\u6240\u6709\u7f13\u51b2\u533a\u540c\u65f6\u6267\u884c Ex \u547d\u4ee4","title":"\u6280\u5de7 36"},{"location":"computer_science/linux/vim/vim/#37","text":"\u53c2\u6570\u5217\u8868\uff1a \u8bb0\u5f55\u4e86\u5728 vim \u542f\u52a8\u65f6\u53c2\u6570\u4f20\u9012\u7ed9 vim \u7684\u6587\u4ef6\u5217\u8868 Ex\u547d\u4ee4 \u6548\u679c :args {arglist} {arglist} \u53ef\u4ee5\u4f7f\u7528\u901a\u914d\u7b26\u5339\u914d\u4e00\u4e9b\u6587\u4ef6 :args *.* , :args **/*.js :args `cat .chapter` : \u53ef\u4ee5\u5c06 cat \u7684\u8f93\u51fa\u4f5c\u4e3a args \u7684\u8f93\u5165 Ex\u547d\u4ee4 \u6548\u679c :next :prev :argdo \u5bf9\u6240\u6709\u7684\u7f13\u51b2\u533a\u540c\u65f6\u6267\u884c Ex \u547d\u4ee4","title":"\u6280\u5de7 37"},{"location":"computer_science/linux/vim/vim/#38","text":"\u53ef\u4ee5\u542f\u7528 hidden \u4f7f\u5728 buffer \u4e4b\u95f4\u8df3\u8f6c\u7684\u65f6\u5019\u4e0d\u7528\u4fdd\u5b58 \u6216\u8005\u4f7f\u7528 :next! Ex\u547d\u4ee4 \u6548\u679c :edit \u53ef\u4ee5\u56de\u6eda","title":"\u6280\u5de7 38"},{"location":"computer_science/linux/vim/vim/#39","text":"","title":"\u6280\u5de7 39"},{"location":"computer_science/linux/vim/vim/#_6","text":"","title":"\u7b2c\u4e09\u90e8\u5206: \u66f4\u5feb\u7684\u79fb\u52a8\u53ca\u8df3\u8f6c"},{"location":"computer_science/linux/vim/vim/#_7","text":"","title":"\u7b2c\u516b\u7ae0\uff1a\u7528\u547d\u4ee4\u5728\u6587\u6863\u4e2d\u79fb\u52a8"},{"location":"computer_science/linux/vim/vim/#47-48","text":":h motion.txt Vim \u6709 \u5c4f\u5e55\u884c \u548c \u5b9e\u9645\u884c \u7684\u6982\u5ff5 \u52a8\u4f5c\u7684\u4f5c\u7528 \u5c4f\u5e55\u884c \u5b9e\u9645\u884c left, up, down, right h , j , k , l gh , gj , gk , gl \u884c\u9996\uff0c\u884c\u5c3e\uff0c\u7b2c\u4e00\u4e2a\u975e\u7a7a\u767d\u5b57\u7b26 0 , $ , ^ g0 , g$ , g^","title":"\u6280\u5de747-48"},{"location":"computer_science/linux/vim/vim/#49","text":"\u4e0a\u8ff0\u662f\u57fa\u4e8e\u5355\u8bcd(word)\u7684\u79fb\u52a8 \u5728 Vim \u4e2d\u6709\u8fde\u4e2a\u4e0d\u540c\u7684\u6982\u5ff5 word \u548c WORD :h word , :h WORD word WORD b B w W e E ge gE","title":"\u6280\u5de749"},{"location":"computer_science/linux/vim/vim/#51-53","text":"Vim \u7684\u64cd\u4f5c\u54f2\u5b66\u662f operator + number + motion \uff0c\u5728\u672c\u7ae0\u4e2d\u7684\u4e00\u4e9b\u6280\u5de7\u90fd\u662f motion d{motion} , c{motion} , v{motion} \u8fd8\u53ef\u4ee5\u4f7f\u7528\u67e5\u627e\u547d\u4ee4 \\ \u4f5c\u7528 \u547d\u4ee4 \u9009\u62e9\u4e00\u5bf9\u5206\u9694\u7b26\u5185\u90e8\u7684\u533a\u57df i \u9009\u62e9\u4e00\u5bf9\u5206\u9694\u7b26\u5185\u90e8\u7684\u533a\u57df\u4ee5\u53ca\u5206\u9694\u7b26 a \u53ef\u9009\u5206\u9694\u7b26 ) } ] ' \" ` t :\u8868\u793axml\u6807\u7b7e <xml>tag<xml> \u6587\u672c\u5bf9\u8c61 \u9009\u62e9\u8303\u56f4 iw \u5f53\u524d\u5355\u8bcd(word) iW \u5f53\u524d\u5b57\u4e32(WORD) is \u5f53\u524d\u53e5\u5b50 ip \u5f53\u524d\u6bb5\u843d aW \u5f53\u524d\u5b57\u4e32(WORD)\u4ee5\u53ca\u4e00\u4e2a\u7a7a\u683c as \u5f53\u524d\u53e5\u5b50\u4ee5\u53ca\u4e00\u4e2a\u7a7a\u683c ap \u5f53\u524d\u6bb5\u843d\u4ee5\u53ca\u4e00\u4e2a \u7a7a\u884c","title":"\u6280\u5de751-53"},{"location":"computer_science/linux/vim/vim/#54","text":"","title":"\u6280\u5de754:\u4f4d\u7f6e\u6807\u8bb0\u548c\u8df3\u8f6c"},{"location":"computer_science/linux/vim/vim/#1","text":"m{a-zA-Z} \u8bbe\u7f6e\u4f4d\u7f6e\u6807\u8bb0 `{mark} \u8df3\u8f6c\u5230\u4f4d\u7f6e\u6807\u8bb0\u6240\u5728\u7684\u884c\u3001\u5217 '{mark} \u8df3\u8f6c\u5230\u4f4d\u7f6e\u6807\u8bb0\u6240\u5728\u7684\u884c \u5c0f\u5199\u4f4d\u7f6e\u6807\u8bb0\u53ea\u5728\u6bcf\u4e2a\u7f13\u51b2\u533a\u5c40\u90e8\u53ef\u89c1 \u5927\u5199\u4f4d\u7f6e\u6807\u8bb0\u5219\u5168\u5c40\u53ef\u89c1","title":"1. \u8bbe\u7f6e\u6807\u8bb0"},{"location":"computer_science/linux/vim/vim/#2","text":"\u4f4d\u7f6e\u6807\u8bb0 \u8df3\u8f6c\u5230 `` \u5f53\u524d\u6587\u4ef6\u4e2d\u4e0a\u6b21\u8df3\u8f6c\u52a8\u4f5c\u4e4b\u524d\u7684\u4f4d\u7f6e `. \u4e0a\u6b21\u4fee\u6539\u7684\u5730\u65b9 `^ \u4e0a\u6b21\u63d2\u5165\u7684\u5730\u65b9 `[ \u4e0a\u6b21\u4fee\u6539\u6216\u590d\u5236\u7684\u8d77\u59cb\u4f4d\u7f6e `] \u4e0a\u6b21\u4fee\u6539\u6216\u590d\u5236\u7684\u7ed3\u675f\u4f4d\u7f6e `< \u4e0a\u6b21\u9ad8\u4eae\u9009\u533a\u7684\u8d77\u59cb\u4f4d\u7f6e `> \u4e0a\u6b21\u9ad8\u4eae\u9009\u533a\u7684\u7ed3\u675f\u4f4d\u7f6e","title":"2. \u81ea\u52a8\u4f4d\u7f6e\u6807\u8bb0"},{"location":"computer_science/linux/vim/vim/#55","text":"\u547d\u4ee4 \u4f5c\u7528 % \u8df3\u8f6c\u5230\u6240\u5339\u914d\u7684\u62ec\u53f7\u7684\u4f4d\u7f6e \u5e38\u5e38\u7528\u6b64\u529f\u80fd\u4fee\u6539\u4e00\u5bf9\u62ec\u53f7\u7684\u6837\u5f0f\uff0c\u4f8b\u5982\u5c06 {London Berlin New York} \u4fee\u6539\u4e3a [London Berlin New York] \u4f7f\u7528\u4e86 ``","title":"\u6280\u5de7 55"},{"location":"computer_science/linux/vim/vim/#tips","text":"matchit \u968f vim \u4e00\u8d77\u53d1\u5e03\uff0c\u4f46\u5b83\u7f3a\u7701\u5e76\u672a\u4f7f\u80fd \" \u5c06\u8fd9\u4e00\u6bb5\u5185\u5bb9\u52a0\u5165vimrc set nocompatible filetype plugin on runtime macros/matchit.vim \u63a8\u8350\u4e00\u4e2a\u63d2\u4ef6 surround","title":"Tips"},{"location":"computer_science/linux/vim/vim/#_8","text":"","title":"\u7b2c\u4e5d\u7ae0\uff1a\u5728\u6587\u4ef6\u95f4\u8df3\u8f6c"},{"location":"computer_science/linux/vim/vim/#56","text":"\u8df3\u8f6c\u7684\u547d\u4ee4 <C-o> <C-i> \u4ec0\u4e48\u662f\u8df3\u8f6c :jumps \u4efb\u4f55\u5927\u8303\u56f4\u7684\u79fb\u52a8\u90fd\u88ab\u5f53\u6210\u8df3\u8f6c(hjkl, \u9762\u5411\u5b57\u7b26\u548c\u5355\u8bcd\u7684\u79fb\u52a8\u4e0d\u7b97) ( / ) \u8df3\u5230\u4e0a\u4e00\u53e5/\u4e0b\u4e00\u53e5\u7684\u5f00\u5934 H / M / L \u8df3\u5230\u5c4f\u5e55\u7684\u6700\u4e0a\u65b9/\u4e2d\u95f4/\u6700\u4e0b\u65b9 gf \u8df3\u8f6c\u5230\u5149\u6807\u4e0b\u7684\u6587\u4ef6\u540d <C-]> \u8df3\u8f6c\u5230\u5149\u6807\u4e0b\u5173\u952e\u5b57\u5b9a\u4e49\u4e4b\u5904 vim \u628a <Tab> \u548c <C-i> \u8ba4\u4e3a\u662f\u4e00\u4e2a\u4e1c\u897f","title":"\u6280\u5de756"},{"location":"computer_science/linux/vim/vim/#57","text":":changs g; \u4e0a\u6b21\u8fdb\u884c\u6539\u53d8\u7684\u4f4d\u7f6e g, \u4e0e\u4e0a\u4e2a\u547d\u4ee4\u76f8\u53cd \u64a4\u9500/\u53cd\u64a4\u9500 u <C-r> \u4e00\u4e2a\u7f13\u51b2\u533a\u4e00\u4e2a\u6539\u53d8\u5217\u8868\uff0c\u4e00\u4e2a\u7a97\u53e3\u4e00\u4e2a\u8df3\u8f6c\u5217\u8868","title":"\u6280\u5de757"},{"location":"computer_science/linux/vim/vim/#58","text":"gf \u8df3\u8f6c\u5230\u6587\u4ef6 \" \u53ef\u4ee5\u8bbe\u7f6e\u4e00\u4e2a\u6216\u591a\u4e2a\u6269\u5c55\u540d\u5b57 :set suffixesadd+=.md \u8fd8\u53ef\u4ee5\u8bbe\u7f6e path \uff0c\u8be6\u60c5\u8bf7\u89c1 :set path \u4e66\u4e0a\u6709\u4e00\u6bb5\u6ca1\u6709\u6284 \u63a8\u8350\u4e24\u4e2a\u63d2\u4ef6 ruby , bunlder","title":"\u6280\u5de758"},{"location":"computer_science/linux/vim/vim/#59","text":"\u6ce8\u610f\u8bbe\u7f6e\u5168\u5c40\u6807\u8bb0 - m + Upcase_letter","title":"\u6280\u5de759"},{"location":"computer_science/linux/vim/vim/#_9","text":"","title":"\u7b2c\u56db\u90e8\u5206:\u5bc4\u5b58\u5668"},{"location":"computer_science/linux/vim/vim/#_10","text":"","title":"\u7b2c\u5341\u7ae0\uff1a\u590d\u5236\u4e0e\u7c98\u8d34"},{"location":"computer_science/linux/vim/vim/#60-61","text":"\"{register} \uff1a\u53ef\u4ee5\u6307\u5b9a\u5bc4\u5b58\u5668 \u4f7f\u7528 y{motion} \u547d\u4ee4\uff0c\u8981\u590d\u5236\u7684\u6587\u672c\u540c\u65f6\u88ab\u62f7\u8d1d\u8fdb\u5165\u65e0\u540d\u5bc4\u5b58\u5668 \"\" \uff0c\u548c\u590d\u5236\u4e13\u7528\u5bc4\u5b58\u5668 \"0 \u5bc4\u5b58\u5668 \u4f5c\u7528 \"\" \"{a-z} \"0 \"_ \u9ed1\u6d1e\u5bc4\u5b58\u5668 \"+ X11\u526a\u5207\u677f\uff0c\u7528\u526a\u5207\u3001\u590d\u5236\u4e0e\u7c98\u8d34\u547d\u4ee4\u64cd\u4f5c X11\u4e3b\u526a\u5207\u677f\uff0c\u7528\u9f20\u6807\u4e2d\u952e\u64cd\u4f5c(Windows \u548c Mac OSX\u6ca1\u6709) \"+p \uff1a\u53ef\u4ee5\u7c98\u8d34\u7cfb\u7edf\u526a\u5207\u677f\u7684\u5185\u5bb9, \u63d2\u5165\u6a21\u5f0f\u4e0b\u4f7f\u7528 <C-r>+ \u53ea\u8bfb\u5bc4\u5b58\u5668 \"% \u5f53\u524d\u6587\u4ef6\u540d \"# \u8f6e\u6362\u6587\u4ef6\u540d \". \u4e0a\u6b21\u63d2\u5165\u7684\u6587\u672c \": \u4e0a\u6b21\u6267\u884c\u7684Ex\u547d\u4ee4 \"/ \uff1a(\u53ef\u4ee5\u901a\u8fc7 :let \u6539\u53d8) \u4e0a\u6b21\u67e5\u627e\u7684\u6a21\u5f0f","title":"\u6280\u5de760-61"},{"location":"computer_science/linux/vim/vim/#62-63","text":"P \u7c98\u8d34\u5230\u5f53\u524d\u4f4d\u7f6e\u4e4b\u524d gp \u4e0e p \u4f5c\u7528\u76f8\u540c\uff0c\u5149\u6807\u4f4d\u7f6e\u5728\u5f53\u524d\u4f4d\u7f6e\u7684\u7ed3\u5c3e\u800c\u4e0d\u662f\u5f00\u5934 gP \u4e0e P \u4f5c\u7528\u76f8\u540c\uff0c\u5149\u6807\u4f4d\u7f6e\u5728\u5f53\u524d\u6587\u672c\u4f4d\u7f6e\u7684\u7ed3\u5c3e\u800c\u4e0d\u662f\u5f00\u5934","title":"\u6280\u5de762 - 63"},{"location":"computer_science/linux/vim/vim/#64","text":"\u61d2\u5f97\u770b","title":"\u6280\u5de7 64"},{"location":"computer_science/linux/vim/vim/#11","text":"","title":"\u7b2c11\u7ae0:\u5b8f"},{"location":"computer_science/linux/vim/vim/#65-68","text":"\u4f7f\u7528 q{register} \u5f00\u59cb\u5f55\u5236\u5b8f\uff0c\u4f7f\u7528 q \u7ed3\u675f\u5f55\u5236 reg {register} \u770b register \u4e2d\u7684\u5185\u5bb9 n@{register} \u591a\u6b21\u6267\u884c Visual\u591a\u884c\u9009\u4e2d\uff0c\u518d normal @a \u53ef\u4ee5\u5e76\u884c\u6267\u884c","title":"\u6280\u5de7 65 - 68"},{"location":"computer_science/linux/vim/vim/#69","text":"\u4f7f\u7528 q{REGISTER} \u52a0\u5185\u5bb9\u5728 q{register} \u4e4b\u540e\u3002","title":"\u6280\u5de7 69"},{"location":"computer_science/linux/vim/vim/#70","text":"\u5728\u4e00\u7ec4\u6587\u4ef6\u4e2d\u6267\u884c\u5b8f\uff0c\u4f46\u662f\u6211\u61d2\u5f97\u770b","title":"\u6280\u5de7 70"},{"location":"computer_science/linux/vim/vim/#71","text":"\u4e00\u70b9\u70b9vim\u811a\u672c let i = 0 echo i let i += 1 - \u7528\u6765\u7d2f\u52a0 let i = 1 qa I<C-r>=i<CR>)<Esc> let i += 123 q","title":"\u6280\u5de7 71"},{"location":"computer_science/linux/vim/vim/#72","text":"\u76f4\u63a5\u4fee\u6539\u5b8f\u7684\u5bc4\u5b58\u5668\u4e2d\u7684\u5185\u5bb9 put a \u4fee\u6539\u5185\u5bb9 \"ay$","title":"\u6280\u5de772 \u4fee\u6539\u5b8f"},{"location":"computer_science/network/io_uring/","text":"io_uring \u00b6 reference \u00b6 change linux kernel in ubuntu version io_uring \u8bbe\u8ba1\u8005\u81ea\u5df1\u5199\u7684\u7b2c\u4e00\u624b\u8d44\u6599\uff1a efficient io with io_uring Missing Manuals - io_uring worker pool \u5347\u7ea7ubuntu20.04\u5185\u6838 liburing github how to build liburing Linux error while loading shared libraries: cannot open shared object file: No such file or directory general idea \u00b6 design thinking: 0 copy -> share data u/k -> [lock]no efficiency -> ring buffer(1 producer and 1 consumer) submitting IO(submission queue) application( producer )->kernel( consumer ) completion IO(completion queue) kernel( producer )-> application( consumer ) data structure design \u00b6 complete side \u00b6 struct io_uring_cqe { __u64 user_data ; // initial request submission __s32 res ; // return val of sys call __u32 flags ; // carry meta data related to this operation(not use now) }; submition side \u00b6 struct io_uring_sqe { __u8 opcode ; // describes the operation code __u8 flags ; // contains modifier flags that are common across command types __u16 ioprio ; // priority of this request __s32 fd ; // __u64 off ; // holds the offset at which the operation should take place. __u64 addr ; __u32 len ; union { __kernel_rwf_t rw_flags ; __u32 fsync_flags ; __u16 poll_events ; __u32 sync_range_flags ; __u32 msg_flags ; }; __u64 user_data ; union { __u16 buf_index ; __u64 __pad2 [ 3 ]; }; }; How the ring works \u00b6 system call \u00b6 io_uring_setup() \u00b6 io_uring_enter() \u00b6 io_uring_register() \u00b6 \u200b","title":"io_uring\u8be6\u89e3"},{"location":"computer_science/network/io_uring/#io_uring","text":"","title":"io_uring"},{"location":"computer_science/network/io_uring/#reference","text":"change linux kernel in ubuntu version io_uring \u8bbe\u8ba1\u8005\u81ea\u5df1\u5199\u7684\u7b2c\u4e00\u624b\u8d44\u6599\uff1a efficient io with io_uring Missing Manuals - io_uring worker pool \u5347\u7ea7ubuntu20.04\u5185\u6838 liburing github how to build liburing Linux error while loading shared libraries: cannot open shared object file: No such file or directory","title":"reference"},{"location":"computer_science/network/io_uring/#general-idea","text":"design thinking: 0 copy -> share data u/k -> [lock]no efficiency -> ring buffer(1 producer and 1 consumer) submitting IO(submission queue) application( producer )->kernel( consumer ) completion IO(completion queue) kernel( producer )-> application( consumer )","title":"general idea"},{"location":"computer_science/network/io_uring/#data-structure-design","text":"","title":"data structure design"},{"location":"computer_science/network/io_uring/#complete-side","text":"struct io_uring_cqe { __u64 user_data ; // initial request submission __s32 res ; // return val of sys call __u32 flags ; // carry meta data related to this operation(not use now) };","title":"complete side"},{"location":"computer_science/network/io_uring/#submition-side","text":"struct io_uring_sqe { __u8 opcode ; // describes the operation code __u8 flags ; // contains modifier flags that are common across command types __u16 ioprio ; // priority of this request __s32 fd ; // __u64 off ; // holds the offset at which the operation should take place. __u64 addr ; __u32 len ; union { __kernel_rwf_t rw_flags ; __u32 fsync_flags ; __u16 poll_events ; __u32 sync_range_flags ; __u32 msg_flags ; }; __u64 user_data ; union { __u16 buf_index ; __u64 __pad2 [ 3 ]; }; };","title":"submition side"},{"location":"computer_science/network/io_uring/#how-the-ring-works","text":"","title":"How the ring works"},{"location":"computer_science/network/io_uring/#system-call","text":"","title":"system call"},{"location":"computer_science/network/io_uring/#io_uring_setup","text":"","title":"io_uring_setup()"},{"location":"computer_science/network/io_uring/#io_uring_enter","text":"","title":"io_uring_enter()"},{"location":"computer_science/network/io_uring/#io_uring_register","text":"\u200b","title":"io_uring_register()"},{"location":"computer_science/network/iptables/","text":"iptables \u00b6 \u7b80\u5355\u6765\u8bb2iptables\u53ef\u4ee5\u68c0\u6d4b\u3001\u4fee\u6539\u3001\u8f6c\u53d1\u3001\u91cd\u5b9a\u5411\u548c\u4e22\u5f03ipv4\u6570\u636e\u5305\u3002 iptables \u5bf9\u4ece\u5185\u90e8\u7aef\u53e3\u8fdb\u5165\u7684\u6570\u636e\u5305\u548c\u4ece\u9762\u5411\u4e92\u8054\u7f51\u7aef\u53e3\u8fdb\u5165\u7684\u6570\u636e\u5305\u90fd\u9700\u8981\u7ecf\u8fc7\u4e0b\u56fe\u3002 ipv6 use ip6tables \u4ec0\u4e48\u662f router desicion reference \u00b6 iptables tutorial 1.2.2 iptables official Simple stateful firewall ubuntu community wiki iptables arch wiki","title":"iptables"},{"location":"computer_science/network/iptables/#iptables","text":"\u7b80\u5355\u6765\u8bb2iptables\u53ef\u4ee5\u68c0\u6d4b\u3001\u4fee\u6539\u3001\u8f6c\u53d1\u3001\u91cd\u5b9a\u5411\u548c\u4e22\u5f03ipv4\u6570\u636e\u5305\u3002 iptables \u5bf9\u4ece\u5185\u90e8\u7aef\u53e3\u8fdb\u5165\u7684\u6570\u636e\u5305\u548c\u4ece\u9762\u5411\u4e92\u8054\u7f51\u7aef\u53e3\u8fdb\u5165\u7684\u6570\u636e\u5305\u90fd\u9700\u8981\u7ecf\u8fc7\u4e0b\u56fe\u3002 ipv6 use ip6tables \u4ec0\u4e48\u662f router desicion","title":"iptables"},{"location":"computer_science/network/iptables/#reference","text":"iptables tutorial 1.2.2 iptables official Simple stateful firewall ubuntu community wiki iptables arch wiki","title":"reference"},{"location":"computer_science/network/linux-network/","text":"LINUX NETWORK \u00b6 \u6027\u80fd\u5e38\u7528\u5de5\u5177 \u00b6 \u53c2\u8003\u8d44\u6599 \u00b6 Netflix \u9ad8\u6027\u80fd\u67b6\u6784\u5e08 Brendan Gregg's Blog linux command search ipcs uptime iostat sar mpstat pmap nmon glances ftptop powertop mytop htop/top/atop netstat ethtool tcpdump telnet strace iptraf iftop \u7f51\u7edc\u539f\u7406\u4ee3\u7801 \u00b6 SOCKET \u00b6 What is the Difference Between read() and recv() , and Between send() and write()? Socket programming - What's the difference between listen() and accept()? #include < sys/socket.h > listenfd = int socket ( int domain , int type , int protocol ); domain : \u9009\u62e9\u7f51\u7edc\u5c42\u534f\u8bae \u53ef\u4ee5\u9009\u62e9IPV6\u6216\u8005IPV4\u7b49 type : \u9009\u62e9\u4f20\u8f93\u5c42\u534f\u8bae \u53ef\u4ee5\u9009\u62e9TCP\u6216UPD\u7b49 protocol : \u5177\u4f53\u7684PROCOTOL 0\u503c\u4e3a\u9ed8\u8ba4 return : \u6210\u529f\u8fd4\u56de\u4e00\u4e2asocket\u7684\u6587\u4ef6\u63cf\u8ff0\u7b26 \u5931\u8d25\u8fd4\u56de-1 #include < sys/socket.h > int bind ( int sockfd , const struct sockaddr * addr , socklen_t addrlen ); bind\u7684\u4f5c\u7528 : \u7ed1\u5b9a\u5177\u4f53\u7684\u5730\u5740\uff0c\u4f46\u662f\u4e00\u822c\u628a\u8fd9\u4e00\u6b65\u53eb\u547d\u540dsocket. #include < sys/socket.h > int listen ( int sockfd , int backlog ); backlog : \u5168\u8054\u63a5\u7684\u6570\u91cf #include int accept ( int sockfd , struct sockaddr * restrict addr , socklen_t * restrict addrlen ); \u5ba2\u6237\u7aef\u8f83\u5c11\u65f6C10k \u00b6 // \u6bcf\u4e2a\u7ebf\u7a0b\u7684\u7ebf\u7a0b\u6808\u9884\u5206\u914d\u7684\u5927\u5c0f\u4e3a 8M // 8M x 128 = 1G // 1G\u7684\u5185\u5b58\u5927\u6982\u80fd\u6709128\u4e2a\u5ba2\u6237\u7aef\u8fde\u63a5 void * client_routine ( void * arg ) { int connfd = * ( int * ) arg ; char buff [ MAXLINE ]; while ( 1 ) { int n = recv ( connfd , buff , MAXLINE , 0 ); if ( n > 0 ) { buff [ n ] = '\\0' ; printf ( \"recv msg from client: %s \\n \" , buff ); } else if ( n == 0 ) { close ( connfd ); } } } int main ( int argc , char ** argv ) { // \u521b\u5efa\u4e00\u4e2asocket\uff0c\u5185\u6838\u521d\u59cb\u5316socket\u76f8\u5173\u7684\u6570\u636e\u7ed3\u6784\uff0c\u6bd4\u5982\u63a5\u6536\u6d88\u606f\u7684\u961f\u5217 // socket data structure init in kernel listenfd = socket ( AF_INET , SOCK_STREAM , 0 )) // \u7ed1\u5b9a\u7aef\u53e3\u53f7 // initialization ... // listenfd (local_ip, local_port, ..., tcp) bind ( listenfd , ( struct sockaddr * ) & severaddr , sizeof ( severaddr )) // https://man7.org/linux/man-pages/man2/listen.2.html // listenfd listen remote fd listen ( listenfd , 10 ) while ( 1 ) { // return connfd (remote_ip, remote_port, local_ip, local_port) connfd = accept ( listenfd , ( struct sockaddr * ) NULL , NULL ) pthread_t threapid ; pthread_create ( & threapid , NULL , client_routine , & connfd ); } close ( listenfd ); return 0 ; } I/O MULTIPLEXING \u00b6 Epoll \u00b6 Linux and I/O completion ports? #include <sys/epoll.h> // The epoll API can be used either as an edge-triggered or a // level-triggered interface and scales well to large numbers of // watched file descriptors. epoll API\u7684\u6838\u5fc3\u6982\u5ff5\u662f \u5185\u6838\u7a7a\u95f4 \u7684\u6570\u636e\u7ed3\u6784 epoll instance \uff0c \u5728 \u7528\u6237\u7a7a\u95f4 \u7684\u89c6\u89d2\u770b\u6765\uff0cepoll instance \u662f\u4e24\u4e2a\u5217\u8868\u7684\u5bb9\u5668\u3002 The interest list : \u76d1\u63a7\u5217\u8868 The ready list : I/O ready \u5217\u8868 \u521b\u5efaepoll instance // epoll_create() creates a new epoll instance. int epoll_create ( int size ); int epoll_create1 ( int flags ); /* * \u53ef\u4ee5[op]\u64cd\u4f5cepfd[epoll instance]\u91cc\u7684fd[io file descripe] */ int epoll_ctl ( int epfd , int op , int fd , struct epoll_event * event ); // epoll_event *event \u662f\u7528\u6765\u8868\u660efd[io file descripe]\u7684\u53ef\u8bfb\u53d6\u72b6\u6001 // union typedef union epoll_data { void * ptr ; int fd ; uint32_t u32 ; uint64_t u64 ; } epoll_data_t ; struct epoll_event { uint32_t events ; /* Epoll events */ epoll_data_t data ; /* User data variable */ }; /* * */ int epoll_wait ( int epfd , struct epoll_event * events , int maxevents , int timeout ); EXAMPLE CODE \u00b6 #define MAX_EVENTS 10 struct epoll_event ev , events [ MAX_EVENTS ]; int listen_sock , conn_sock , nfds , epollfd ; /* Code to set up listening socket, 'listen_sock', (socket(), bind(), listen()) omitted. */ epollfd = epoll_create1 ( 0 ); if ( epollfd == -1 ) { perror ( \"epoll_create1\" ); exit ( EXIT_FAILURE ); } /* * struct epoll_event { * uint32_t events; * epoll_data_t data; * } * */ ev . events = EPOLLIN ; ev . data . fd = listen_sock ; if ( epoll_ctl ( epollfd , EPOLL_CTL_ADD , listen_sock , & ev ) == -1 ) { perror ( \"epoll_ctl: listen_sock\" ); exit ( EXIT_FAILURE ); } for (;;) { nfds = epoll_wait ( epollfd , events , MAX_EVENTS , -1 ); if ( nfds == -1 ) { perror ( \"epoll_wait\" ); exit ( EXIT_FAILURE ); } for ( n = 0 ; n < nfds ; ++ n ) { if ( events [ n ]. data . fd == listen_sock ) { conn_sock = accept ( listen_sock , ( struct sockaddr * ) & addr , & addrlen ); if ( conn_sock == -1 ) { perror ( \"accept\" ); exit ( EXIT_FAILURE ); } setnonblocking ( conn_sock ); ev . events = EPOLLIN | EPOLLET ; ev . data . fd = conn_sock ; if ( epoll_ctl ( epollfd , EPOLL_CTL_ADD , conn_sock , & ev ) == -1 ) { perror ( \"epoll_ctl: conn_sock\" ); exit ( EXIT_FAILURE ); } } else { do_use_fd ( events [ n ]. data . fd ); } } } \u670d\u52a1\u5668Reactor\u4e0eProactor \u00b6 reactor\u7684\u6570\u636e\u7ed3\u6784\u5982\u4e0b HTTP \u670d\u52a1\u5668 \u00b6 ntyreactor_run : \u670d\u52a1\u5668\u4e0d\u65ad\u8fd0\u884c accept_cb : ip\u9650\u5236\uff0c\u8d1f\u8f7d\u5747\u8861 recv_cb send_cb \u4e00\u4e2aweb\u670d\u52a1\u5668\u7684\u5fc5\u8981\u7ec4\u4ef6 http + reactor GET POST cgi netstat -anop | grep 8888 http\u53d1\u9001\u6587\u4ef6\u8c03\u7528sendfile() --> \u96f6\u62f7\u8d1d \u6587\u4ef6DMA-> memory; memory -> mmap","title":"\u7f51\u7edc\u57fa\u7840"},{"location":"computer_science/network/linux-network/#linux-network","text":"","title":"LINUX NETWORK"},{"location":"computer_science/network/linux-network/#_1","text":"","title":"\u6027\u80fd\u5e38\u7528\u5de5\u5177"},{"location":"computer_science/network/linux-network/#_2","text":"Netflix \u9ad8\u6027\u80fd\u67b6\u6784\u5e08 Brendan Gregg's Blog linux command search ipcs uptime iostat sar mpstat pmap nmon glances ftptop powertop mytop htop/top/atop netstat ethtool tcpdump telnet strace iptraf iftop","title":"\u53c2\u8003\u8d44\u6599"},{"location":"computer_science/network/linux-network/#_3","text":"","title":"\u7f51\u7edc\u539f\u7406\u4ee3\u7801"},{"location":"computer_science/network/linux-network/#socket","text":"What is the Difference Between read() and recv() , and Between send() and write()? Socket programming - What's the difference between listen() and accept()? #include < sys/socket.h > listenfd = int socket ( int domain , int type , int protocol ); domain : \u9009\u62e9\u7f51\u7edc\u5c42\u534f\u8bae \u53ef\u4ee5\u9009\u62e9IPV6\u6216\u8005IPV4\u7b49 type : \u9009\u62e9\u4f20\u8f93\u5c42\u534f\u8bae \u53ef\u4ee5\u9009\u62e9TCP\u6216UPD\u7b49 protocol : \u5177\u4f53\u7684PROCOTOL 0\u503c\u4e3a\u9ed8\u8ba4 return : \u6210\u529f\u8fd4\u56de\u4e00\u4e2asocket\u7684\u6587\u4ef6\u63cf\u8ff0\u7b26 \u5931\u8d25\u8fd4\u56de-1 #include < sys/socket.h > int bind ( int sockfd , const struct sockaddr * addr , socklen_t addrlen ); bind\u7684\u4f5c\u7528 : \u7ed1\u5b9a\u5177\u4f53\u7684\u5730\u5740\uff0c\u4f46\u662f\u4e00\u822c\u628a\u8fd9\u4e00\u6b65\u53eb\u547d\u540dsocket. #include < sys/socket.h > int listen ( int sockfd , int backlog ); backlog : \u5168\u8054\u63a5\u7684\u6570\u91cf #include int accept ( int sockfd , struct sockaddr * restrict addr , socklen_t * restrict addrlen );","title":"SOCKET"},{"location":"computer_science/network/linux-network/#c10k","text":"// \u6bcf\u4e2a\u7ebf\u7a0b\u7684\u7ebf\u7a0b\u6808\u9884\u5206\u914d\u7684\u5927\u5c0f\u4e3a 8M // 8M x 128 = 1G // 1G\u7684\u5185\u5b58\u5927\u6982\u80fd\u6709128\u4e2a\u5ba2\u6237\u7aef\u8fde\u63a5 void * client_routine ( void * arg ) { int connfd = * ( int * ) arg ; char buff [ MAXLINE ]; while ( 1 ) { int n = recv ( connfd , buff , MAXLINE , 0 ); if ( n > 0 ) { buff [ n ] = '\\0' ; printf ( \"recv msg from client: %s \\n \" , buff ); } else if ( n == 0 ) { close ( connfd ); } } } int main ( int argc , char ** argv ) { // \u521b\u5efa\u4e00\u4e2asocket\uff0c\u5185\u6838\u521d\u59cb\u5316socket\u76f8\u5173\u7684\u6570\u636e\u7ed3\u6784\uff0c\u6bd4\u5982\u63a5\u6536\u6d88\u606f\u7684\u961f\u5217 // socket data structure init in kernel listenfd = socket ( AF_INET , SOCK_STREAM , 0 )) // \u7ed1\u5b9a\u7aef\u53e3\u53f7 // initialization ... // listenfd (local_ip, local_port, ..., tcp) bind ( listenfd , ( struct sockaddr * ) & severaddr , sizeof ( severaddr )) // https://man7.org/linux/man-pages/man2/listen.2.html // listenfd listen remote fd listen ( listenfd , 10 ) while ( 1 ) { // return connfd (remote_ip, remote_port, local_ip, local_port) connfd = accept ( listenfd , ( struct sockaddr * ) NULL , NULL ) pthread_t threapid ; pthread_create ( & threapid , NULL , client_routine , & connfd ); } close ( listenfd ); return 0 ; }","title":"\u5ba2\u6237\u7aef\u8f83\u5c11\u65f6C10k"},{"location":"computer_science/network/linux-network/#io-multiplexing","text":"","title":"I/O MULTIPLEXING"},{"location":"computer_science/network/linux-network/#epoll","text":"Linux and I/O completion ports? #include <sys/epoll.h> // The epoll API can be used either as an edge-triggered or a // level-triggered interface and scales well to large numbers of // watched file descriptors. epoll API\u7684\u6838\u5fc3\u6982\u5ff5\u662f \u5185\u6838\u7a7a\u95f4 \u7684\u6570\u636e\u7ed3\u6784 epoll instance \uff0c \u5728 \u7528\u6237\u7a7a\u95f4 \u7684\u89c6\u89d2\u770b\u6765\uff0cepoll instance \u662f\u4e24\u4e2a\u5217\u8868\u7684\u5bb9\u5668\u3002 The interest list : \u76d1\u63a7\u5217\u8868 The ready list : I/O ready \u5217\u8868 \u521b\u5efaepoll instance // epoll_create() creates a new epoll instance. int epoll_create ( int size ); int epoll_create1 ( int flags ); /* * \u53ef\u4ee5[op]\u64cd\u4f5cepfd[epoll instance]\u91cc\u7684fd[io file descripe] */ int epoll_ctl ( int epfd , int op , int fd , struct epoll_event * event ); // epoll_event *event \u662f\u7528\u6765\u8868\u660efd[io file descripe]\u7684\u53ef\u8bfb\u53d6\u72b6\u6001 // union typedef union epoll_data { void * ptr ; int fd ; uint32_t u32 ; uint64_t u64 ; } epoll_data_t ; struct epoll_event { uint32_t events ; /* Epoll events */ epoll_data_t data ; /* User data variable */ }; /* * */ int epoll_wait ( int epfd , struct epoll_event * events , int maxevents , int timeout );","title":"Epoll"},{"location":"computer_science/network/linux-network/#example-code","text":"#define MAX_EVENTS 10 struct epoll_event ev , events [ MAX_EVENTS ]; int listen_sock , conn_sock , nfds , epollfd ; /* Code to set up listening socket, 'listen_sock', (socket(), bind(), listen()) omitted. */ epollfd = epoll_create1 ( 0 ); if ( epollfd == -1 ) { perror ( \"epoll_create1\" ); exit ( EXIT_FAILURE ); } /* * struct epoll_event { * uint32_t events; * epoll_data_t data; * } * */ ev . events = EPOLLIN ; ev . data . fd = listen_sock ; if ( epoll_ctl ( epollfd , EPOLL_CTL_ADD , listen_sock , & ev ) == -1 ) { perror ( \"epoll_ctl: listen_sock\" ); exit ( EXIT_FAILURE ); } for (;;) { nfds = epoll_wait ( epollfd , events , MAX_EVENTS , -1 ); if ( nfds == -1 ) { perror ( \"epoll_wait\" ); exit ( EXIT_FAILURE ); } for ( n = 0 ; n < nfds ; ++ n ) { if ( events [ n ]. data . fd == listen_sock ) { conn_sock = accept ( listen_sock , ( struct sockaddr * ) & addr , & addrlen ); if ( conn_sock == -1 ) { perror ( \"accept\" ); exit ( EXIT_FAILURE ); } setnonblocking ( conn_sock ); ev . events = EPOLLIN | EPOLLET ; ev . data . fd = conn_sock ; if ( epoll_ctl ( epollfd , EPOLL_CTL_ADD , conn_sock , & ev ) == -1 ) { perror ( \"epoll_ctl: conn_sock\" ); exit ( EXIT_FAILURE ); } } else { do_use_fd ( events [ n ]. data . fd ); } } }","title":"EXAMPLE CODE"},{"location":"computer_science/network/linux-network/#reactorproactor","text":"reactor\u7684\u6570\u636e\u7ed3\u6784\u5982\u4e0b","title":"\u670d\u52a1\u5668Reactor\u4e0eProactor"},{"location":"computer_science/network/linux-network/#http","text":"ntyreactor_run : \u670d\u52a1\u5668\u4e0d\u65ad\u8fd0\u884c accept_cb : ip\u9650\u5236\uff0c\u8d1f\u8f7d\u5747\u8861 recv_cb send_cb \u4e00\u4e2aweb\u670d\u52a1\u5668\u7684\u5fc5\u8981\u7ec4\u4ef6 http + reactor GET POST cgi netstat -anop | grep 8888 http\u53d1\u9001\u6587\u4ef6\u8c03\u7528sendfile() --> \u96f6\u62f7\u8d1d \u6587\u4ef6DMA-> memory; memory -> mmap","title":"HTTP \u670d\u52a1\u5668"},{"location":"computer_science/network/wireguard/","text":"\u5728ubuntu\u4e0a\u4f7f\u7528wireguard \u00b6 \u914d\u7f6e\u4f7f\u7528 INI \u683c\u5f0f \u00b6 client \u00b6 \u914d\u7f6e\u6587\u4ef6 /etc/wireguard/wg0.conf \u5185\u5bb9\u5982\u4e0b [Interface] PrivateKey = xxxxxxxxxxxxxxxxxxxxxxxxxx # client \u7aef\u53e3\u7684\u79c1\u94a5 DNS = 8.8.8.8 Address = 10.0.0.2/24 # azure vps\u670d\u52a1\u5668 [Peer] PublicKey = xxxxxxxxxxxxxxxxxxxxxxxxxx # server \u7aef\u53e3\u7684\u79c1\u94a5 AllowedIPs = 0.0.0.0/0, ::0/0 # \u8f6c\u53d1\u6240\u6709\u6d41\u91cf Endpoint = server_ip\uff1aport # \u8fd9\u91cc\u8981\u66ff\u6362\u6210\u5b9e\u9645\u4f7f\u7528\u7684ip\u548c\u7aef\u53e3\u53f7 PersistentKeepalive = 25 server \u00b6 \u914d\u7f6e\u6587\u4ef6 /etc/wireguard/wg0.conf \u5185\u5bb9\u5982\u4e0b [Interface] ListenPort = 51820 PrivateKey = xxxxxxxxxxxxxxxxxxxxxxxxxx # server \u7aef\u53e3\u7684\u79c1\u94a5 Address = 10.0.0.1/24 PostUp = iptables -A FORWARD -i %i -j ACCEPT; iptables -A FORWARD -o %i -j ACCEPT; iptables -t nat -A POSTROUTING -o eth0 -j MASQUERADE PostDown = iptables -D FORWARD -i %i -j ACCEPT; iptables -D FORWARD -o %i -j ACCEPT; iptables -t nat -D POSTROUTING -o eth0 -j MASQUERADE [Peer] PublicKey = xxxxxxxxxxxxxxxxxxxxxxxxxx # client \u7aef\u53e3\u7684\u516c\u94a5 AllowedIPs = 10.0.0.2/32 # \u4e0e\u6d59\u5927\u7389\u6cc9\u6821\u533a\u5219\u901a\u8fc7\u697c503 ubuntu\u7684Address\u5dee\u4e0d\u591a \u5728\u670d\u52a1\u5668\u4e0a\u5f00\u542f\u6d41\u91cf\u8f6c\u53d1 $ echo \"net.ipv4.ip_forward = 1\" >> /etc/sysctl.conf $ echo \"net.ipv4.conf.all.proxy_arp = 1\" >> /etc/sysctl.conf $ sysctl -p /etc/sysctl.conf \u5b57\u6bb5 \u00b6 \u6211\u7684\u7406\u89e3\u662fwireguard\u914d\u7f6e\u540e\u7684\u7ed3\u679c\u662f\u4e00\u5bf9\u865a\u62df\u7f51\u5361\uff0c\u5176\u4e2d Interface \u548c Peer \u5206\u522b\u4f5c\u7528\u4e8e\u914d\u7f6e\u81ea\u5df1\u8fd9\u4e00\u7aef\u7f51\u5361\u7684\u4fe1\u606f\u548c\u5bf9\u7aef\u7684\u7f51\u5361\u4fe1\u606f\u3002\u5176\u4e2d\uff1a PrivateKey : \u79c1\u94a5\u7531 wg keygen \u751f\u6210 PublicKey : \u516c\u94a5 wg pubkey \u751f\u6210 wireguard\u7684\u539f\u7406\u662f\u5148\u4f7f\u7528 PrivateKey \u548c PublicKey \u786e\u8ba4\u8eab\u4efd\uff0c\u7136\u540e\u518d\u5546\u91cf\u4e00\u4e2a\u5171\u540c\u7684\u5bc6\u94a5\u6765\u52a0\u5bc6\u3002(\u56e0\u4e3a\u5355\u4e2a\u5bc6\u94a5(\u79c1\u94a5)\u7684\u52a0\u5bc6\u7b97\u6cd5\u6bd4\u516c\u94a5\u52a0\u5bc6\u7b97\u6cd5\u5feb)\u3002 \u4f7f\u7528\u7684\u65f6\u5019 Interface \u4e0b\u9762\u5e94\u8be5\u586b\u5199\u81ea\u5df1\u7684\u79c1\u94a5\uff0c Peer \u4e0b\u9762\u5e94\u8be5\u586b\u5199\u5bf9\u65b9\u7684\u516c\u94a5\u3002 PostUp \u548c PostDown \u662f\u4e00\u4e2a\u7f51\u5361\u542f\u52a8\u524d\u548c\u542f\u52a8\u540e\u6240\u6267\u884c\u7684\u547d\u4ee4\u3002 AllowedIPs \u662f\u5141\u8bb8\u54ea\u4e9b\u5b57\u6bb5\u7684\u6d41\u91cf\u53d1\u9001\u8fc7\u6765\uff0c\u6240\u4ee5server\u7aef\u4e0b\u9762\u7684 AllowedIPs \u548cclient\u4e0b\u9762\u7684 Address \u76f8\u540c ListenPort \u662f\u534f\u8bae\u7684\u7aef\u53e3\u53f7 Endpoint \u662f\u670d\u52a1\u5668\u7684ip\u5730\u5740\uff0c\u5176\u5b9ewireguard\u662fP2P\u534f\u8bae DNS : \u7b2c\u4e00\u6b21\u6ca1\u6709\u8bbe\u7f6e\u7684\u65f6\u5019vpn\u53ef\u4ee5ping\u901a\u56fd\u5185\u7f51\u7edc\uff0c\u4f46\u662f\u4e0d\u80fdping\u901a\u56fd\u5916\u7f51\u7edc\uff0c\u8bbe\u7f6e\u4e4b\u540e\u5c31\u597d\u4e86 PersistentKeepalive \u662f\u68c0\u67e5\u8fde\u63a5\u65f6\u95f4\u7684\u8bbe\u7f6e \u542f\u52a8\u4e0e\u505c\u6b62 \u00b6 \u542f\u52a8 # wg-quick up wg0 \u505c\u6b62 # wg-quick down wg0 \u67e5\u770b\u6548\u679c \u279c ubuntu git: ( master ) \u2717 sudo wg [ sudo ] password for wtog: interface: wg0 public key: 3JuY6/TwE5xj2chaqvlTMEmBN3eF8ebrMz5/5VlB1U4 = private key: ( hidden ) listening port: 38426 fwmark: 0xca6c peer: ULoeh3bKsZypRw4byT3HlZcNByt0VcP18RSTgyuzj0Y = endpoint: 20 .89.136.250:51820 allowed ips: 0 .0.0.0/0, ::/0 latest handshake: 30 seconds ago transfer: 13 .58 MiB received, 2 .23 MiB sent persistent keepalive: every 25 seconds \u279c ubuntu git: ( master ) \u2717 \u53c2\u8003\u8d44\u6599 \u00b6 wireguard official wireguard \u914d\u7f6evpn","title":"wireguard"},{"location":"computer_science/network/wireguard/#ubuntuwireguard","text":"","title":"\u5728ubuntu\u4e0a\u4f7f\u7528wireguard"},{"location":"computer_science/network/wireguard/#ini","text":"","title":"\u914d\u7f6e\u4f7f\u7528INI\u683c\u5f0f"},{"location":"computer_science/network/wireguard/#client","text":"\u914d\u7f6e\u6587\u4ef6 /etc/wireguard/wg0.conf \u5185\u5bb9\u5982\u4e0b [Interface] PrivateKey = xxxxxxxxxxxxxxxxxxxxxxxxxx # client \u7aef\u53e3\u7684\u79c1\u94a5 DNS = 8.8.8.8 Address = 10.0.0.2/24 # azure vps\u670d\u52a1\u5668 [Peer] PublicKey = xxxxxxxxxxxxxxxxxxxxxxxxxx # server \u7aef\u53e3\u7684\u79c1\u94a5 AllowedIPs = 0.0.0.0/0, ::0/0 # \u8f6c\u53d1\u6240\u6709\u6d41\u91cf Endpoint = server_ip\uff1aport # \u8fd9\u91cc\u8981\u66ff\u6362\u6210\u5b9e\u9645\u4f7f\u7528\u7684ip\u548c\u7aef\u53e3\u53f7 PersistentKeepalive = 25","title":"client"},{"location":"computer_science/network/wireguard/#server","text":"\u914d\u7f6e\u6587\u4ef6 /etc/wireguard/wg0.conf \u5185\u5bb9\u5982\u4e0b [Interface] ListenPort = 51820 PrivateKey = xxxxxxxxxxxxxxxxxxxxxxxxxx # server \u7aef\u53e3\u7684\u79c1\u94a5 Address = 10.0.0.1/24 PostUp = iptables -A FORWARD -i %i -j ACCEPT; iptables -A FORWARD -o %i -j ACCEPT; iptables -t nat -A POSTROUTING -o eth0 -j MASQUERADE PostDown = iptables -D FORWARD -i %i -j ACCEPT; iptables -D FORWARD -o %i -j ACCEPT; iptables -t nat -D POSTROUTING -o eth0 -j MASQUERADE [Peer] PublicKey = xxxxxxxxxxxxxxxxxxxxxxxxxx # client \u7aef\u53e3\u7684\u516c\u94a5 AllowedIPs = 10.0.0.2/32 # \u4e0e\u6d59\u5927\u7389\u6cc9\u6821\u533a\u5219\u901a\u8fc7\u697c503 ubuntu\u7684Address\u5dee\u4e0d\u591a \u5728\u670d\u52a1\u5668\u4e0a\u5f00\u542f\u6d41\u91cf\u8f6c\u53d1 $ echo \"net.ipv4.ip_forward = 1\" >> /etc/sysctl.conf $ echo \"net.ipv4.conf.all.proxy_arp = 1\" >> /etc/sysctl.conf $ sysctl -p /etc/sysctl.conf","title":"server"},{"location":"computer_science/network/wireguard/#_1","text":"\u6211\u7684\u7406\u89e3\u662fwireguard\u914d\u7f6e\u540e\u7684\u7ed3\u679c\u662f\u4e00\u5bf9\u865a\u62df\u7f51\u5361\uff0c\u5176\u4e2d Interface \u548c Peer \u5206\u522b\u4f5c\u7528\u4e8e\u914d\u7f6e\u81ea\u5df1\u8fd9\u4e00\u7aef\u7f51\u5361\u7684\u4fe1\u606f\u548c\u5bf9\u7aef\u7684\u7f51\u5361\u4fe1\u606f\u3002\u5176\u4e2d\uff1a PrivateKey : \u79c1\u94a5\u7531 wg keygen \u751f\u6210 PublicKey : \u516c\u94a5 wg pubkey \u751f\u6210 wireguard\u7684\u539f\u7406\u662f\u5148\u4f7f\u7528 PrivateKey \u548c PublicKey \u786e\u8ba4\u8eab\u4efd\uff0c\u7136\u540e\u518d\u5546\u91cf\u4e00\u4e2a\u5171\u540c\u7684\u5bc6\u94a5\u6765\u52a0\u5bc6\u3002(\u56e0\u4e3a\u5355\u4e2a\u5bc6\u94a5(\u79c1\u94a5)\u7684\u52a0\u5bc6\u7b97\u6cd5\u6bd4\u516c\u94a5\u52a0\u5bc6\u7b97\u6cd5\u5feb)\u3002 \u4f7f\u7528\u7684\u65f6\u5019 Interface \u4e0b\u9762\u5e94\u8be5\u586b\u5199\u81ea\u5df1\u7684\u79c1\u94a5\uff0c Peer \u4e0b\u9762\u5e94\u8be5\u586b\u5199\u5bf9\u65b9\u7684\u516c\u94a5\u3002 PostUp \u548c PostDown \u662f\u4e00\u4e2a\u7f51\u5361\u542f\u52a8\u524d\u548c\u542f\u52a8\u540e\u6240\u6267\u884c\u7684\u547d\u4ee4\u3002 AllowedIPs \u662f\u5141\u8bb8\u54ea\u4e9b\u5b57\u6bb5\u7684\u6d41\u91cf\u53d1\u9001\u8fc7\u6765\uff0c\u6240\u4ee5server\u7aef\u4e0b\u9762\u7684 AllowedIPs \u548cclient\u4e0b\u9762\u7684 Address \u76f8\u540c ListenPort \u662f\u534f\u8bae\u7684\u7aef\u53e3\u53f7 Endpoint \u662f\u670d\u52a1\u5668\u7684ip\u5730\u5740\uff0c\u5176\u5b9ewireguard\u662fP2P\u534f\u8bae DNS : \u7b2c\u4e00\u6b21\u6ca1\u6709\u8bbe\u7f6e\u7684\u65f6\u5019vpn\u53ef\u4ee5ping\u901a\u56fd\u5185\u7f51\u7edc\uff0c\u4f46\u662f\u4e0d\u80fdping\u901a\u56fd\u5916\u7f51\u7edc\uff0c\u8bbe\u7f6e\u4e4b\u540e\u5c31\u597d\u4e86 PersistentKeepalive \u662f\u68c0\u67e5\u8fde\u63a5\u65f6\u95f4\u7684\u8bbe\u7f6e","title":"\u5b57\u6bb5"},{"location":"computer_science/network/wireguard/#_2","text":"\u542f\u52a8 # wg-quick up wg0 \u505c\u6b62 # wg-quick down wg0 \u67e5\u770b\u6548\u679c \u279c ubuntu git: ( master ) \u2717 sudo wg [ sudo ] password for wtog: interface: wg0 public key: 3JuY6/TwE5xj2chaqvlTMEmBN3eF8ebrMz5/5VlB1U4 = private key: ( hidden ) listening port: 38426 fwmark: 0xca6c peer: ULoeh3bKsZypRw4byT3HlZcNByt0VcP18RSTgyuzj0Y = endpoint: 20 .89.136.250:51820 allowed ips: 0 .0.0.0/0, ::/0 latest handshake: 30 seconds ago transfer: 13 .58 MiB received, 2 .23 MiB sent persistent keepalive: every 25 seconds \u279c ubuntu git: ( master ) \u2717","title":"\u542f\u52a8\u4e0e\u505c\u6b62"},{"location":"computer_science/network/wireguard/#_3","text":"wireguard official wireguard \u914d\u7f6evpn","title":"\u53c2\u8003\u8d44\u6599"},{"location":"computer_science/programming_language/html/html/","text":"Hyper Text Markup Language \u00b6 w3c \u6807\u51c6\u5305\u62ec - \u7ed3\u6784\u5316\u6807\u51c6\u8bed\u8a00(HTML, XML) - \u8868\u73b0\u6807\u51c6\u8bed\u8a00(CSS) - \u884c\u4e3a\u6807\u51c6\u8bed\u8a00(DOM, ECMAScript) \u00b6 \u7f51\u9875\u7684\u57fa\u672c\u7ed3\u6784 \u00b6 <!-- DOCTYPE: \u544a\u8bc9\u6d4f\u89c8\u5668\u6211\u4eec\u4f7f\u7528\u7684\u89c4\u8303 --> <!DOCTYPE html> < html lang = \"en\" > <!-- \u7f51\u9875\u7684\u5934\u90e8 --> < head > <!-- \u81ea\u95ed\u5408\u6807\u7b7e --> <!-- \u63cf\u8ff0\u6027\u6807\u7b7e meta: \u4e00\u822c\u7528\u6765\u505aSEO --> < meta charset = \"UTF-8\" > < meta name = \"keywords\" content = \"\u5b66\u4e60\u7f51\u9875\" > < meta name = \"description\" content = \"\u7528\u6765\u5b66\u4e60html\u7684\u7f51\u9875\" > <!-- Title: \u7f51\u9875\u7684\u6807\u9898 --> < title > Title </ title > </ head > < body > Hello World! </ body > </ html > \u7f51\u9875\u7684\u57fa\u672c\u6807\u7b7e \u00b6 \u5185\u5bb9\u90fd\u5199\u5728 body \u91cc < body > <!-- \u6807\u9898\u6807\u7b7e --> < h1 > Head 1 </ h1 > < h2 > Head 2 </ h2 > < h3 > Head 3 </ h3 > < h4 > Head 4 </ h4 > < h5 > Head 5 </ h5 > < h6 > Head 6 </ h6 > <!-- \u6bb5\u843d\u6807\u7b7e --> < p > \u6bb5\u843d </ p > <!-- \u6362\u884c\u6807\u7b7e --> \u6362\u884c\u6807\u7b7e < br /> <!-- \u6c34\u5e73\u7ebf\u6807\u7b7e --> < hr /> <!-- \u5b57\u4f53\u6837\u5f0f --> < strong > \u7c97\u4f53 </ strong > < em > \u659c\u4f53 </ em > < br /> <!-- \u6ce8\u91ca\u548c\u7279\u6b8a\u7b26\u53f7 --> <!-- \u7a7a\u683c --> \u7a7a &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \u683c <!-- \u5927\u4e8e --> &gt; <!-- \u7248\u6743\u7b26\u53f7 --> &copy; </ body > \u56fe\u50cf \u00b6 <!-- \u56fe\u7247 --> <!-- alt: \u56fe\u7247\u52a0\u8f7d\u4e0d\u51fa\u6765\u65f6\u5019\u7684\u6587\u5b57 --> < img src = \"../resource/g1.jpg\" alt = \"\u6211\u662f\u4e00\u4e2a\u56fe\u7247\" title = \"\u60ac\u505c\u6587\u5b57\" /> \u94fe\u63a5 \u00b6 <!-- link --> <!-- target: open in where --> < a href = \"https://www.baidu.com\" target = \"_blank\" > < img src = \"../resource/g1.jpg\" alt = \"\u6211\u662f\u4e00\u4e2a\u56fe\u7247\" title = \"\u60ac\u505c\u6587\u5b57\" /> </ a > < a href = \"https://www.baidu.com\" target = \"_self\" > \u767e\u5ea6 </ a > <!-- \u951a\u94fe\u63a5 1. \u9700\u8981\u4e00\u4e2a\u6807\u8bb0 2. \u8df3\u8f6c\u5230\u6807\u8bb0 --> <!-- name: \u6807\u8bb0 --> < a name = \"down\" > \u5e95\u90e8 </ a > <!-- \u8df3\u8f6c --> < a href = \"#down\" > \u5230\u5e95\u90e8 </ a > <!-- \u8fd8\u53ef\u4ee5\u7ec4\u5408\u4f7f\u7528 --> <!-- herf=url#down --> <!-- \u90ae\u4ef6\u94fe\u63a5 --> < a href = \"mailto:zhigaowang@zju.edu.cn\" > \u8054\u7cfb\u6211 </ a > <!-- QQ\u94fe\u63a5 --> \u5757\u5143\u7d20\u548c\u884c\u5143\u7d20 \u00b6 \u5757\u5143\u7d20: \u65e0\u8bba\u5185\u5bb9\u591a\u5c11\uff0c\u8be5\u5143\u7d20\u72ec\u5360\u4e00\u884c \u884c\u5143\u7d20: \u5185\u5bb9\u6491\u5f00\u5bbd\u5ea6\uff0c\u5de6\u53f3\u90fd\u662f\u884c\u5185\u5143\u7d20\u7684\u53ef\u4ee5\u6392\u5728\u4e00\u6392 \u5217\u8868 \u00b6 <!-- \u6709\u5e8f\u5217\u8868 --> < ol > < li > Java </ li > < li > Python </ li > < li > C/C++ </ li > </ ol > < hr /> <!-- \u65e0\u5e8f\u5217\u8868 --> < ul > < li > Java </ li > < li > Python </ li > < li > C/C++ </ li > </ ul > < hr /> <!-- \u81ea\u5b9a\u4e49\u5217\u8868 dl : \u6807\u7b7e dt : \u5217\u8868\u540d\u79f0 dd : \u5217\u8868\u5185\u5bb9 --> < dl > < dt > \u5b66\u79d1 </ dt > < dd > Java </ dd > < dd > Python </ dd > < dd > Linux </ dd > < dd > C </ dd > < dt > \u4f4d\u7f6e </ dt > < dd > \u897f\u5b89 </ dd > < dd > \u91cd\u5e86 </ dd > < dd > \u4e0a\u6d77 </ dd > </ dl > \u8868\u683c\u6807\u7b7e \u00b6 <!-- \u8868\u683ctable \u884c tr \u5217 td --> < table border = \"1px\" > < tr > <!-- \u8de8\u5217 --> < td colspan = \"4\" align = \"center\" > 1-1 </ td > </ tr > < tr > <!-- \u8de8\u5217 --> < td rowspan = \"2\" > 2-1 </ td > < td > 2-2 </ td > < td > 2-3 </ td > < td > 2-4 </ td > </ tr > < tr > < td > 3-2 </ td > < td > 3-3 </ td > < td > 3-4 </ td > </ tr > </ table > \u97f3\u9891\u548c\u89c6\u9891 \u00b6 <!-- \u89c6\u9891 \u63a7\u5236\u6807\u7b7e: controls \u81ea\u52a8\u64ad\u653e: autoplay --> < video src = \"../resource/video/ocean.mp4\" controls ></ video > <!-- \u97f3\u9891 \u63a7\u5236\u6807\u7b7e: controls \u81ea\u52a8\u64ad\u653e: autoplay --> < audio src = \"../resource/audio/birds.wav\" controls ></ audio > \u9875\u9762\u7ed3\u6784 \u00b6 \u5143\u7d20\u540d \u63cf\u8ff0 header \u6807\u9898\u5934\u90e8\u533a\u57df\u7684\u5185\u5bb9 footer \u6807\u8bb0\u811a\u90e8\u533a\u57df\u7684\u5185\u5bb9 section Web\u9875\u9762\u4e2d\u7684\u4e00\u5757\u72ec\u7acb\u533a\u57df article \u72ec\u7acb\u7684\u6587\u7ae0\u5185\u5bb9 aside \u76f8\u5173\u5185\u5bb9\u6216\u5e94\u7528(\u5e38\u5e38\u7528\u4e8e\u4fa7\u8fb9\u680f) nav \u5bfc\u822a\u7c7b\u8f85\u52a9\u5185\u5bb9 < body > < header > < h2 > \u7f51\u9875\u5934\u90e8 </ h2 > </ header > < section > < h2 > \u7f51\u9875\u4e3b\u4f53 </ h2 > </ section > < footer > < h2 > \u7f51\u9875\u811a\u90e8 </ h2 > </ footer > </ body > \u5185\u8054\u6846\u67b6 \u00b6 <!-- <iframe src=\"http://player.bilibili.com/player.html?aid=55631961&bvid=BV1x4411V75C&cid=97257967&page=11\" scrolling=\"no\" border=\"0\" frameborder=\"no\" framespacing=\"0\" allowfullscreen=\"true\"> </iframe> --> < iframe src = \"https://www.bilibili.com\" frameborder = \"0\" width = \"1000px\" height = \"800\" ></ iframe > \u8868\u5355 \u00b6 < form method = \"post\" action = \"01.html\" > <!-- \u6587\u672c\u8f93\u5165\u6846 <input type=\"text\"> --> < p > Name: < input type = \"text\" name = \"username\" ></ p > <!-- \u5bc6\u7801\u8f93\u5165\u6846 <input type=\"password\"> --> <!-- value \u9ed8\u8ba4\u521d\u59cb\u503c maxlen \u6700\u957f\u80fd\u5199\u51e0\u4e2a\u5b57\u7b26 size \u6587\u672c\u6846\u957f\u5ea6 --> < p > Password: < input type = \"password\" name = \"password\" ></ p > < p > < input type = \"submit\" > < input type = \"reset\" > </ p > </ form > \u4e0b\u9762\u90fd\u662finput\u6807\u7b7e type\u4e0d\u4e00\u6837 \u00b6 \u6587\u672c\u6846 \u00b6 \u5355\u9009\u6846 radio \u591a\u9009\u6846 checkbox \u00b6 name\u503c\u76f8\u540c\u4e3a\u540c\u4e00\u7ec4 \u6309\u94ae button/image \u00b6 image : \u56fe\u7247\u6309\u94ae <!-- button : \u666e\u901a\u6309\u94ae image : \u56fe\u7247\u6309\u94ae submit : \u63d0\u4ea4\u6309\u94ae reset : \u91cd\u7f6e\u6309\u94ae --> \u4e0b\u62c9\u6846\u548c\u6587\u4ef6\u57df \u00b6 <!-- \u6587\u4ef6\u57df --> < p >< input type = \"file\" name = \"files\" ></ p > <!-- \u63d0\u4ea4\u6309\u94ae --> < input type = \"submit\" > < input type = \"reset\" > </ p > <!-- \u4e0b\u62c9\u6846 --> < p > < select name = \"checked\" > < option value = \"china\" > \u4e2d\u56fd </ option > < option value = \"usa\" > \u7f8e\u56fd </ option > < option value = \"ind\" > \u5370\u5ea6 </ option > <!-- \u9ed8\u8ba4\u503c --> < option value = \"eth\" selected > \u745e\u58eb </ option > </ select > </ p > <!-- \u6587\u672c\u57df --> < textarea name = \"textarea\" cols = \"30\" rows = \"10\" ></ textarea > \u8868\u5355\u7684\u5e94\u7528 - \u9690\u85cf\u57df - \u53ea\u8bfb - \u7981\u7528","title":"html"},{"location":"computer_science/programming_language/html/html/#hyper-text-markup-language","text":"w3c \u6807\u51c6\u5305\u62ec - \u7ed3\u6784\u5316\u6807\u51c6\u8bed\u8a00(HTML, XML) - \u8868\u73b0\u6807\u51c6\u8bed\u8a00(CSS) - \u884c\u4e3a\u6807\u51c6\u8bed\u8a00(DOM, ECMAScript)","title":"Hyper Text Markup Language"},{"location":"computer_science/programming_language/html/html/#_1","text":"","title":""},{"location":"computer_science/programming_language/html/html/#_2","text":"<!-- DOCTYPE: \u544a\u8bc9\u6d4f\u89c8\u5668\u6211\u4eec\u4f7f\u7528\u7684\u89c4\u8303 --> <!DOCTYPE html> < html lang = \"en\" > <!-- \u7f51\u9875\u7684\u5934\u90e8 --> < head > <!-- \u81ea\u95ed\u5408\u6807\u7b7e --> <!-- \u63cf\u8ff0\u6027\u6807\u7b7e meta: \u4e00\u822c\u7528\u6765\u505aSEO --> < meta charset = \"UTF-8\" > < meta name = \"keywords\" content = \"\u5b66\u4e60\u7f51\u9875\" > < meta name = \"description\" content = \"\u7528\u6765\u5b66\u4e60html\u7684\u7f51\u9875\" > <!-- Title: \u7f51\u9875\u7684\u6807\u9898 --> < title > Title </ title > </ head > < body > Hello World! </ body > </ html >","title":"\u7f51\u9875\u7684\u57fa\u672c\u7ed3\u6784"},{"location":"computer_science/programming_language/html/html/#_3","text":"\u5185\u5bb9\u90fd\u5199\u5728 body \u91cc < body > <!-- \u6807\u9898\u6807\u7b7e --> < h1 > Head 1 </ h1 > < h2 > Head 2 </ h2 > < h3 > Head 3 </ h3 > < h4 > Head 4 </ h4 > < h5 > Head 5 </ h5 > < h6 > Head 6 </ h6 > <!-- \u6bb5\u843d\u6807\u7b7e --> < p > \u6bb5\u843d </ p > <!-- \u6362\u884c\u6807\u7b7e --> \u6362\u884c\u6807\u7b7e < br /> <!-- \u6c34\u5e73\u7ebf\u6807\u7b7e --> < hr /> <!-- \u5b57\u4f53\u6837\u5f0f --> < strong > \u7c97\u4f53 </ strong > < em > \u659c\u4f53 </ em > < br /> <!-- \u6ce8\u91ca\u548c\u7279\u6b8a\u7b26\u53f7 --> <!-- \u7a7a\u683c --> \u7a7a &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \u683c <!-- \u5927\u4e8e --> &gt; <!-- \u7248\u6743\u7b26\u53f7 --> &copy; </ body >","title":"\u7f51\u9875\u7684\u57fa\u672c\u6807\u7b7e"},{"location":"computer_science/programming_language/html/html/#_4","text":"<!-- \u56fe\u7247 --> <!-- alt: \u56fe\u7247\u52a0\u8f7d\u4e0d\u51fa\u6765\u65f6\u5019\u7684\u6587\u5b57 --> < img src = \"../resource/g1.jpg\" alt = \"\u6211\u662f\u4e00\u4e2a\u56fe\u7247\" title = \"\u60ac\u505c\u6587\u5b57\" />","title":"\u56fe\u50cf"},{"location":"computer_science/programming_language/html/html/#_5","text":"<!-- link --> <!-- target: open in where --> < a href = \"https://www.baidu.com\" target = \"_blank\" > < img src = \"../resource/g1.jpg\" alt = \"\u6211\u662f\u4e00\u4e2a\u56fe\u7247\" title = \"\u60ac\u505c\u6587\u5b57\" /> </ a > < a href = \"https://www.baidu.com\" target = \"_self\" > \u767e\u5ea6 </ a > <!-- \u951a\u94fe\u63a5 1. \u9700\u8981\u4e00\u4e2a\u6807\u8bb0 2. \u8df3\u8f6c\u5230\u6807\u8bb0 --> <!-- name: \u6807\u8bb0 --> < a name = \"down\" > \u5e95\u90e8 </ a > <!-- \u8df3\u8f6c --> < a href = \"#down\" > \u5230\u5e95\u90e8 </ a > <!-- \u8fd8\u53ef\u4ee5\u7ec4\u5408\u4f7f\u7528 --> <!-- herf=url#down --> <!-- \u90ae\u4ef6\u94fe\u63a5 --> < a href = \"mailto:zhigaowang@zju.edu.cn\" > \u8054\u7cfb\u6211 </ a > <!-- QQ\u94fe\u63a5 -->","title":"\u94fe\u63a5"},{"location":"computer_science/programming_language/html/html/#_6","text":"\u5757\u5143\u7d20: \u65e0\u8bba\u5185\u5bb9\u591a\u5c11\uff0c\u8be5\u5143\u7d20\u72ec\u5360\u4e00\u884c \u884c\u5143\u7d20: \u5185\u5bb9\u6491\u5f00\u5bbd\u5ea6\uff0c\u5de6\u53f3\u90fd\u662f\u884c\u5185\u5143\u7d20\u7684\u53ef\u4ee5\u6392\u5728\u4e00\u6392","title":"\u5757\u5143\u7d20\u548c\u884c\u5143\u7d20"},{"location":"computer_science/programming_language/html/html/#_7","text":"<!-- \u6709\u5e8f\u5217\u8868 --> < ol > < li > Java </ li > < li > Python </ li > < li > C/C++ </ li > </ ol > < hr /> <!-- \u65e0\u5e8f\u5217\u8868 --> < ul > < li > Java </ li > < li > Python </ li > < li > C/C++ </ li > </ ul > < hr /> <!-- \u81ea\u5b9a\u4e49\u5217\u8868 dl : \u6807\u7b7e dt : \u5217\u8868\u540d\u79f0 dd : \u5217\u8868\u5185\u5bb9 --> < dl > < dt > \u5b66\u79d1 </ dt > < dd > Java </ dd > < dd > Python </ dd > < dd > Linux </ dd > < dd > C </ dd > < dt > \u4f4d\u7f6e </ dt > < dd > \u897f\u5b89 </ dd > < dd > \u91cd\u5e86 </ dd > < dd > \u4e0a\u6d77 </ dd > </ dl >","title":"\u5217\u8868"},{"location":"computer_science/programming_language/html/html/#_8","text":"<!-- \u8868\u683ctable \u884c tr \u5217 td --> < table border = \"1px\" > < tr > <!-- \u8de8\u5217 --> < td colspan = \"4\" align = \"center\" > 1-1 </ td > </ tr > < tr > <!-- \u8de8\u5217 --> < td rowspan = \"2\" > 2-1 </ td > < td > 2-2 </ td > < td > 2-3 </ td > < td > 2-4 </ td > </ tr > < tr > < td > 3-2 </ td > < td > 3-3 </ td > < td > 3-4 </ td > </ tr > </ table >","title":"\u8868\u683c\u6807\u7b7e"},{"location":"computer_science/programming_language/html/html/#_9","text":"<!-- \u89c6\u9891 \u63a7\u5236\u6807\u7b7e: controls \u81ea\u52a8\u64ad\u653e: autoplay --> < video src = \"../resource/video/ocean.mp4\" controls ></ video > <!-- \u97f3\u9891 \u63a7\u5236\u6807\u7b7e: controls \u81ea\u52a8\u64ad\u653e: autoplay --> < audio src = \"../resource/audio/birds.wav\" controls ></ audio >","title":"\u97f3\u9891\u548c\u89c6\u9891"},{"location":"computer_science/programming_language/html/html/#_10","text":"\u5143\u7d20\u540d \u63cf\u8ff0 header \u6807\u9898\u5934\u90e8\u533a\u57df\u7684\u5185\u5bb9 footer \u6807\u8bb0\u811a\u90e8\u533a\u57df\u7684\u5185\u5bb9 section Web\u9875\u9762\u4e2d\u7684\u4e00\u5757\u72ec\u7acb\u533a\u57df article \u72ec\u7acb\u7684\u6587\u7ae0\u5185\u5bb9 aside \u76f8\u5173\u5185\u5bb9\u6216\u5e94\u7528(\u5e38\u5e38\u7528\u4e8e\u4fa7\u8fb9\u680f) nav \u5bfc\u822a\u7c7b\u8f85\u52a9\u5185\u5bb9 < body > < header > < h2 > \u7f51\u9875\u5934\u90e8 </ h2 > </ header > < section > < h2 > \u7f51\u9875\u4e3b\u4f53 </ h2 > </ section > < footer > < h2 > \u7f51\u9875\u811a\u90e8 </ h2 > </ footer > </ body >","title":"\u9875\u9762\u7ed3\u6784"},{"location":"computer_science/programming_language/html/html/#_11","text":"<!-- <iframe src=\"http://player.bilibili.com/player.html?aid=55631961&bvid=BV1x4411V75C&cid=97257967&page=11\" scrolling=\"no\" border=\"0\" frameborder=\"no\" framespacing=\"0\" allowfullscreen=\"true\"> </iframe> --> < iframe src = \"https://www.bilibili.com\" frameborder = \"0\" width = \"1000px\" height = \"800\" ></ iframe >","title":"\u5185\u8054\u6846\u67b6"},{"location":"computer_science/programming_language/html/html/#_12","text":"< form method = \"post\" action = \"01.html\" > <!-- \u6587\u672c\u8f93\u5165\u6846 <input type=\"text\"> --> < p > Name: < input type = \"text\" name = \"username\" ></ p > <!-- \u5bc6\u7801\u8f93\u5165\u6846 <input type=\"password\"> --> <!-- value \u9ed8\u8ba4\u521d\u59cb\u503c maxlen \u6700\u957f\u80fd\u5199\u51e0\u4e2a\u5b57\u7b26 size \u6587\u672c\u6846\u957f\u5ea6 --> < p > Password: < input type = \"password\" name = \"password\" ></ p > < p > < input type = \"submit\" > < input type = \"reset\" > </ p > </ form >","title":"\u8868\u5355"},{"location":"computer_science/programming_language/html/html/#input-type","text":"","title":"\u4e0b\u9762\u90fd\u662finput\u6807\u7b7e type\u4e0d\u4e00\u6837"},{"location":"computer_science/programming_language/html/html/#_13","text":"","title":"\u6587\u672c\u6846"},{"location":"computer_science/programming_language/html/html/#radio-checkbox","text":"name\u503c\u76f8\u540c\u4e3a\u540c\u4e00\u7ec4","title":"\u5355\u9009\u6846 radio \u591a\u9009\u6846 checkbox"},{"location":"computer_science/programming_language/html/html/#buttonimage","text":"image : \u56fe\u7247\u6309\u94ae <!-- button : \u666e\u901a\u6309\u94ae image : \u56fe\u7247\u6309\u94ae submit : \u63d0\u4ea4\u6309\u94ae reset : \u91cd\u7f6e\u6309\u94ae -->","title":"\u6309\u94ae button/image"},{"location":"computer_science/programming_language/html/html/#_14","text":"<!-- \u6587\u4ef6\u57df --> < p >< input type = \"file\" name = \"files\" ></ p > <!-- \u63d0\u4ea4\u6309\u94ae --> < input type = \"submit\" > < input type = \"reset\" > </ p > <!-- \u4e0b\u62c9\u6846 --> < p > < select name = \"checked\" > < option value = \"china\" > \u4e2d\u56fd </ option > < option value = \"usa\" > \u7f8e\u56fd </ option > < option value = \"ind\" > \u5370\u5ea6 </ option > <!-- \u9ed8\u8ba4\u503c --> < option value = \"eth\" selected > \u745e\u58eb </ option > </ select > </ p > <!-- \u6587\u672c\u57df --> < textarea name = \"textarea\" cols = \"30\" rows = \"10\" ></ textarea > \u8868\u5355\u7684\u5e94\u7528 - \u9690\u85cf\u57df - \u53ea\u8bfb - \u7981\u7528","title":"\u4e0b\u62c9\u6846\u548c\u6587\u4ef6\u57df"},{"location":"computer_science/programming_language/trpl/trpl/","text":"trpl \u00b6 The Rust Programming Language empowerment rustup a command line tool for managing Rust versions and associated tools cargo chapter 1 \u00b6 You\u2019re already off to a great start on your Rust journey! In this chapter, you\u2019ve learned how to: Install the latest stable version of Rust using rustup Update to a newer Rust version Open locally installed documentation Write and run a \u201cHello, world!\u201d program using rustc directly Create and run a new project using the conventions of Cargo","title":"trpl"},{"location":"computer_science/programming_language/trpl/trpl/#trpl","text":"The Rust Programming Language empowerment rustup a command line tool for managing Rust versions and associated tools cargo","title":"trpl"},{"location":"computer_science/programming_language/trpl/trpl/#chapter-1","text":"You\u2019re already off to a great start on your Rust journey! In this chapter, you\u2019ve learned how to: Install the latest stable version of Rust using rustup Update to a newer Rust version Open locally installed documentation Write and run a \u201cHello, world!\u201d program using rustc directly Create and run a new project using the conventions of Cargo","title":"chapter 1"}]}